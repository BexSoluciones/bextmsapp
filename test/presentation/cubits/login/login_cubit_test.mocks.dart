// Mocks generated by Mockito 5.4.4 from annotations
// in bexdeliveries/test/presentation/cubits/login/login_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:bexdeliveries/core/helpers/index.dart' as _i6;
import 'package:bexdeliveries/src/domain/models/account.dart' as _i20;
import 'package:bexdeliveries/src/domain/models/client.dart' as _i26;
import 'package:bexdeliveries/src/domain/models/error.dart' as _i25;
import 'package:bexdeliveries/src/domain/models/history_order.dart' as _i27;
import 'package:bexdeliveries/src/domain/models/location.dart' as _i21;
import 'package:bexdeliveries/src/domain/models/news.dart' as _i13;
import 'package:bexdeliveries/src/domain/models/note.dart' as _i24;
import 'package:bexdeliveries/src/domain/models/notification.dart' as _i29;
import 'package:bexdeliveries/src/domain/models/photo.dart' as _i23;
import 'package:bexdeliveries/src/domain/models/processing_queue.dart' as _i2;
import 'package:bexdeliveries/src/domain/models/reason.dart' as _i19;
import 'package:bexdeliveries/src/domain/models/summary.dart' as _i15;
import 'package:bexdeliveries/src/domain/models/summary_report.dart' as _i16;
import 'package:bexdeliveries/src/domain/models/transaction.dart' as _i17;
import 'package:bexdeliveries/src/domain/models/transaction_summary.dart'
    as _i18;
import 'package:bexdeliveries/src/domain/models/warehouse.dart' as _i14;
import 'package:bexdeliveries/src/domain/models/work.dart' as _i12;
import 'package:bexdeliveries/src/domain/repositories/api_repository.dart'
    as _i4;
import 'package:bexdeliveries/src/domain/repositories/database_repository.dart'
    as _i3;
import 'package:bexdeliveries/src/presentation/blocs/gps/gps_bloc.dart' as _i9;
import 'package:bexdeliveries/src/presentation/blocs/network/network_bloc.dart'
    as _i10;
import 'package:bexdeliveries/src/presentation/blocs/processing_queue/processing_queue_bloc.dart'
    as _i7;
import 'package:bexdeliveries/src/services/navigation.dart' as _i8;
import 'package:bexdeliveries/src/services/storage.dart' as _i5;
import 'package:flutter_bloc/flutter_bloc.dart' as _i31;
import 'package:geolocator/geolocator.dart' as _i32;
import 'package:latlong2/latlong.dart' as _i30;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i22;
import 'package:sqflite/sqflite.dart' as _i28;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProcessingQueue_0 extends _i1.SmartFake
    implements _i2.ProcessingQueue {
  _FakeProcessingQueue_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseRepository_1 extends _i1.SmartFake
    implements _i3.DatabaseRepository {
  _FakeDatabaseRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiRepository_2 extends _i1.SmartFake implements _i4.ApiRepository {
  _FakeApiRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalStorageService_3 extends _i1.SmartFake
    implements _i5.LocalStorageService {
  _FakeLocalStorageService_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHelperFunctions_4 extends _i1.SmartFake
    implements _i6.HelperFunctions {
  _FakeHelperFunctions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProcessingQueueState_5 extends _i1.SmartFake
    implements _i7.ProcessingQueueState {
  _FakeProcessingQueueState_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationService_6 extends _i1.SmartFake
    implements _i8.NavigationService {
  _FakeNavigationService_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGpsState_7 extends _i1.SmartFake implements _i9.GpsState {
  _FakeGpsState_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkState_8 extends _i1.SmartFake implements _i10.NetworkState {
  _FakeNetworkState_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseRepository extends _i1.Mock
    implements _i3.DatabaseRepository {
  MockDatabaseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<List<_i12.Work>> getAllWorks() => (super.noSuchMethod(
        Invocation.method(
          #getAllWorks,
          [],
        ),
        returnValue: _i11.Future<List<_i12.Work>>.value(<_i12.Work>[]),
      ) as _i11.Future<List<_i12.Work>>);

  @override
  _i11.Future<List<_i12.Work>> findAllWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #findAllWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i11.Future<List<_i12.Work>>.value(<_i12.Work>[]),
      ) as _i11.Future<List<_i12.Work>>);

  @override
  _i11.Future<List<_i12.Work>> findAllWorksPaginatedByWorkcode(
    String? workcode,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findAllWorksPaginatedByWorkcode,
          [
            workcode,
            page,
          ],
        ),
        returnValue: _i11.Future<List<_i12.Work>>.value(<_i12.Work>[]),
      ) as _i11.Future<List<_i12.Work>>);

  @override
  _i11.Future<List<String>?> completeWorks() => (super.noSuchMethod(
        Invocation.method(
          #completeWorks,
          [],
        ),
        returnValue: _i11.Future<List<String>?>.value(),
      ) as _i11.Future<List<String>?>);

  @override
  _i11.Future<int> countAllWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #countAllWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> insertWork(_i12.Work? work) => (super.noSuchMethod(
        Invocation.method(
          #insertWork,
          [work],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateWork(_i12.Work? work) => (super.noSuchMethod(
        Invocation.method(
          #updateWork,
          [work],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateStatusWork(
    String? workcode,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStatusWork,
          [
            workcode,
            status,
          ],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertWorks(List<_i12.Work>? works) => (super.noSuchMethod(
        Invocation.method(
          #insertWorks,
          [works],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyWorks() => (super.noSuchMethod(
        Invocation.method(
          #emptyWorks,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> deleteWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<_i12.WorkTypes?> getWorkTypesFromWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkTypesFromWorkcode,
          [workcode],
        ),
        returnValue: _i11.Future<_i12.WorkTypes?>.value(),
      ) as _i11.Future<_i12.WorkTypes?>);

  @override
  _i11.Future<List<_i12.WorkAdditional>> getClientsResJetDel(
    String? workcode,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClientsResJetDel,
          [
            workcode,
            reason,
          ],
        ),
        returnValue: _i11.Future<List<_i12.WorkAdditional>>.value(
            <_i12.WorkAdditional>[]),
      ) as _i11.Future<List<_i12.WorkAdditional>>);

  @override
  _i11.Future<void> insertNews(_i13.News? news) => (super.noSuchMethod(
        Invocation.method(
          #insertNews,
          [news],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i14.Warehouse>> getAllWarehouses() => (super.noSuchMethod(
        Invocation.method(
          #getAllWarehouses,
          [],
        ),
        returnValue:
            _i11.Future<List<_i14.Warehouse>>.value(<_i14.Warehouse>[]),
      ) as _i11.Future<List<_i14.Warehouse>>);

  @override
  _i11.Future<_i14.Warehouse?> findWarehouse(int? id) => (super.noSuchMethod(
        Invocation.method(
          #findWarehouse,
          [id],
        ),
        returnValue: _i11.Future<_i14.Warehouse?>.value(),
      ) as _i11.Future<_i14.Warehouse?>);

  @override
  _i11.Future<int> insertWarehouse(_i14.Warehouse? warehouse) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWarehouse,
          [warehouse],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateWarehouse(_i14.Warehouse? warehouse) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWarehouse,
          [warehouse],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertWarehouses(List<_i14.Warehouse>? warehouses) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWarehouses,
          [warehouses],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyWarehouses() => (super.noSuchMethod(
        Invocation.method(
          #emptyWarehouses,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i15.Summary>> getAllSummariesByOrderNumber(int? workId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByOrderNumber,
          [workId],
        ),
        returnValue: _i11.Future<List<_i15.Summary>>.value(<_i15.Summary>[]),
      ) as _i11.Future<List<_i15.Summary>>);

  @override
  _i11.Future<List<_i15.Summary>> getAllSummariesByWorkcode(
    int? workId,
    String? customer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByWorkcode,
          [
            workId,
            customer,
          ],
        ),
        returnValue: _i11.Future<List<_i15.Summary>>.value(<_i15.Summary>[]),
      ) as _i11.Future<List<_i15.Summary>>);

  @override
  _i11.Future<List<_i15.Summary>> getAllInventoryByOrderNumber(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllInventoryByOrderNumber,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i11.Future<List<_i15.Summary>>.value(<_i15.Summary>[]),
      ) as _i11.Future<List<_i15.Summary>>);

  @override
  _i11.Future<List<_i15.Summary>> getAllInventoryByPackage(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllInventoryByPackage,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i11.Future<List<_i15.Summary>>.value(<_i15.Summary>[]),
      ) as _i11.Future<List<_i15.Summary>>);

  @override
  _i11.Future<List<_i15.Summary>> getAllPackageByOrderNumber(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPackageByOrderNumber,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i11.Future<List<_i15.Summary>>.value(<_i15.Summary>[]),
      ) as _i11.Future<List<_i15.Summary>>);

  @override
  _i11.Future<List<_i15.Summary>> watchAllItemsPackage(
    String? orderNumber,
    String? packing,
    String? idPacking,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllItemsPackage,
          [
            orderNumber,
            packing,
            idPacking,
          ],
        ),
        returnValue: _i11.Future<List<_i15.Summary>>.value(<_i15.Summary>[]),
      ) as _i11.Future<List<_i15.Summary>>);

  @override
  _i11.Future<List<_i15.Summary>> getAllSummariesByOrderNumberMoved(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByOrderNumberMoved,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i11.Future<List<_i15.Summary>>.value(<_i15.Summary>[]),
      ) as _i11.Future<List<_i15.Summary>>);

  @override
  _i11.Future<List<_i16.SummaryReport>> getSummaryReportsWithReasonOrRedelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithReasonOrRedelivery,
          [orderNumber],
        ),
        returnValue:
            _i11.Future<List<_i16.SummaryReport>>.value(<_i16.SummaryReport>[]),
      ) as _i11.Future<List<_i16.SummaryReport>>);

  @override
  _i11.Future<List<_i16.SummaryReport>> getSummaryReportsWithReturnOrRedelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithReturnOrRedelivery,
          [orderNumber],
        ),
        returnValue:
            _i11.Future<List<_i16.SummaryReport>>.value(<_i16.SummaryReport>[]),
      ) as _i11.Future<List<_i16.SummaryReport>>);

  @override
  _i11.Future<List<_i16.SummaryReport>> getSummaryReportsWithDelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithDelivery,
          [orderNumber],
        ),
        returnValue:
            _i11.Future<List<_i16.SummaryReport>>.value(<_i16.SummaryReport>[]),
      ) as _i11.Future<List<_i16.SummaryReport>>);

  @override
  _i11.Future<double> countTotalRespawnWorksByWorkcode(
    String? workcode,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #countTotalRespawnWorksByWorkcode,
          [
            workcode,
            reason,
          ],
        ),
        returnValue: _i11.Future<double>.value(0.0),
      ) as _i11.Future<double>);

  @override
  _i11.Future<bool> resetCantSummaries(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetCantSummaries,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<double> getTotalSummaries(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalSummaries,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i11.Future<double>.value(0.0),
      ) as _i11.Future<double>);

  @override
  _i11.Future<int> getTotalPackageSummaries(String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalPackageSummaries,
          [orderNumber],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> getTotalPackageSummariesLoose(String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalPackageSummariesLoose,
          [orderNumber],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> insertSummary(_i15.Summary? summary) => (super.noSuchMethod(
        Invocation.method(
          #insertSummary,
          [summary],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateSummary(_i15.Summary? summary) => (super.noSuchMethod(
        Invocation.method(
          #updateSummary,
          [summary],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertSummaries(List<_i15.Summary>? summaries) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertSummaries,
          [summaries],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptySummaries() => (super.noSuchMethod(
        Invocation.method(
          #emptySummaries,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> deleteSummariesByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSummariesByWorkcode,
          [workcode],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i17.Transaction>> getAllTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTransactions,
          [],
        ),
        returnValue:
            _i11.Future<List<_i17.Transaction>>.value(<_i17.Transaction>[]),
      ) as _i11.Future<List<_i17.Transaction>>);

  @override
  _i11.Future<String?> getDiffTime(int? workId) => (super.noSuchMethod(
        Invocation.method(
          #getDiffTime,
          [workId],
        ),
        returnValue: _i11.Future<String?>.value(),
      ) as _i11.Future<String?>);

  @override
  _i11.Future<double?> countTotalCollectionWorks() => (super.noSuchMethod(
        Invocation.method(
          #countTotalCollectionWorks,
          [],
        ),
        returnValue: _i11.Future<double?>.value(),
      ) as _i11.Future<double?>);

  @override
  _i11.Future<int> insertTransaction(_i17.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransaction,
          [transaction],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> insertTransactionSummary(
          _i18.TransactionSummary? transactionSummary) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransactionSummary,
          [transactionSummary],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<bool> validateTransaction(int? workId) => (super.noSuchMethod(
        Invocation.method(
          #validateTransaction,
          [workId],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> validateTransactionArrived(
    int? workId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateTransactionArrived,
          [
            workId,
            status,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> validateTransactionSummary(
    String? workcode,
    String? orderNumber,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateTransactionSummary,
          [
            workcode,
            orderNumber,
            status,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> checkLastTransaction(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkLastTransaction,
          [workcode],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> checkLastProduct(int? transactionId) => (super.noSuchMethod(
        Invocation.method(
          #checkLastProduct,
          [transactionId],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<int> updateTransaction(_i17.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTransaction,
          [transaction],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertTransactions(List<_i17.Transaction>? transactions) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransactions,
          [transactions],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyTransactions() => (super.noSuchMethod(
        Invocation.method(
          #emptyTransactions,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> deleteTransactionsByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTransactionsByWorkcode,
          [workcode],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<int> countLeftClients(String? workcode) => (super.noSuchMethod(
        Invocation.method(
          #countLeftClients,
          [workcode],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<double> countTotalCollectionWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #countTotalCollectionWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i11.Future<double>.value(0.0),
      ) as _i11.Future<double>);

  @override
  _i11.Future<bool> verifyTransactionExistence(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyTransactionExistence,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<List<_i19.Reason>> getAllReasons() => (super.noSuchMethod(
        Invocation.method(
          #getAllReasons,
          [],
        ),
        returnValue: _i11.Future<List<_i19.Reason>>.value(<_i19.Reason>[]),
      ) as _i11.Future<List<_i19.Reason>>);

  @override
  _i11.Future<_i19.Reason?> findReason(String? name) => (super.noSuchMethod(
        Invocation.method(
          #findReason,
          [name],
        ),
        returnValue: _i11.Future<_i19.Reason?>.value(),
      ) as _i11.Future<_i19.Reason?>);

  @override
  _i11.Future<int> insertReason(_i19.Reason? reason) => (super.noSuchMethod(
        Invocation.method(
          #insertReason,
          [reason],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateReason(_i19.Reason? reason) => (super.noSuchMethod(
        Invocation.method(
          #updateReason,
          [reason],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertReasons(List<_i19.Reason>? reasons) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertReasons,
          [reasons],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyReasons() => (super.noSuchMethod(
        Invocation.method(
          #emptyReasons,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i20.Account>> getAllAccounts() => (super.noSuchMethod(
        Invocation.method(
          #getAllAccounts,
          [],
        ),
        returnValue: _i11.Future<List<_i20.Account>>.value(<_i20.Account>[]),
      ) as _i11.Future<List<_i20.Account>>);

  @override
  _i11.Future<int> insertAccount(_i20.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #insertAccount,
          [account],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateAccount(_i20.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #updateAccount,
          [account],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertAccounts(List<_i20.Account>? accounts) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAccounts,
          [accounts],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyAccounts() => (super.noSuchMethod(
        Invocation.method(
          #emptyAccounts,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i2.ProcessingQueue>> getAllProcessingQueues(
    String? code,
    String? task,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueues,
          [
            code,
            task,
          ],
        ),
        returnValue: _i11.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i11.Future<List<_i2.ProcessingQueue>>);

  @override
  _i11.Future<List<_i2.ProcessingQueue>> getAllProcessingQueuesPaginated(
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueuesPaginated,
          [
            page,
            limit,
          ],
        ),
        returnValue: _i11.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i11.Future<List<_i2.ProcessingQueue>>);

  @override
  _i11.Future<_i2.ProcessingQueue> findProcessingQueue(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #findProcessingQueue,
          [id],
        ),
        returnValue:
            _i11.Future<_i2.ProcessingQueue>.value(_FakeProcessingQueue_0(
          this,
          Invocation.method(
            #findProcessingQueue,
            [id],
          ),
        )),
      ) as _i11.Future<_i2.ProcessingQueue>);

  @override
  _i11.Stream<List<_i2.ProcessingQueue>> watchAllProcessingQueues() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllProcessingQueues,
          [],
        ),
        returnValue: _i11.Stream<List<_i2.ProcessingQueue>>.empty(),
      ) as _i11.Stream<List<_i2.ProcessingQueue>>);

  @override
  _i11.Future<List<_i2.ProcessingQueue>> getAllProcessingQueuesIncomplete() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueuesIncomplete,
          [],
        ),
        returnValue: _i11.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i11.Future<List<_i2.ProcessingQueue>>);

  @override
  _i11.Future<int> countProcessingQueueIncompleteToTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #countProcessingQueueIncompleteToTransactions,
          [],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Stream<List<Map<String, dynamic>>>
      getProcessingQueueIncompleteToTransactions() => (super.noSuchMethod(
            Invocation.method(
              #getProcessingQueueIncompleteToTransactions,
              [],
            ),
            returnValue: _i11.Stream<List<Map<String, dynamic>>>.empty(),
          ) as _i11.Stream<List<Map<String, dynamic>>>);

  @override
  _i11.Future<bool> validateIfProcessingQueueIsIncomplete() =>
      (super.noSuchMethod(
        Invocation.method(
          #validateIfProcessingQueueIsIncomplete,
          [],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<int> updateProcessingQueue(
          _i2.ProcessingQueue? processingQueue) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProcessingQueue,
          [processingQueue],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> insertProcessingQueue(
          _i2.ProcessingQueue? processingQueue) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertProcessingQueue,
          [processingQueue],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> emptyProcessingQueues() => (super.noSuchMethod(
        Invocation.method(
          #emptyProcessingQueues,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Stream<List<_i21.Location>> watchAllLocations() => (super.noSuchMethod(
        Invocation.method(
          #watchAllLocations,
          [],
        ),
        returnValue: _i11.Stream<List<_i21.Location>>.empty(),
      ) as _i11.Stream<List<_i21.Location>>);

  @override
  _i11.Future<List<_i21.Location>> getAllLocations() => (super.noSuchMethod(
        Invocation.method(
          #getAllLocations,
          [],
        ),
        returnValue: _i11.Future<List<_i21.Location>>.value(<_i21.Location>[]),
      ) as _i11.Future<List<_i21.Location>>);

  @override
  _i11.Future<_i21.Location?> getLastLocation() => (super.noSuchMethod(
        Invocation.method(
          #getLastLocation,
          [],
        ),
        returnValue: _i11.Future<_i21.Location?>.value(),
      ) as _i11.Future<_i21.Location?>);

  @override
  _i11.Future<bool> countLocationsManager() => (super.noSuchMethod(
        Invocation.method(
          #countLocationsManager,
          [],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<String> getLocationsToSend() => (super.noSuchMethod(
        Invocation.method(
          #getLocationsToSend,
          [],
        ),
        returnValue: _i11.Future<String>.value(_i22.dummyValue<String>(
          this,
          Invocation.method(
            #getLocationsToSend,
            [],
          ),
        )),
      ) as _i11.Future<String>);

  @override
  _i11.Future<int?> updateLocationsManager() => (super.noSuchMethod(
        Invocation.method(
          #updateLocationsManager,
          [],
        ),
        returnValue: _i11.Future<int?>.value(),
      ) as _i11.Future<int?>);

  @override
  _i11.Future<int> updateLocation(_i21.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocation,
          [location],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertLocation(_i21.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertLocation,
          [location],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyLocations() => (super.noSuchMethod(
        Invocation.method(
          #emptyLocations,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i23.Photo>> getAllPhotos() => (super.noSuchMethod(
        Invocation.method(
          #getAllPhotos,
          [],
        ),
        returnValue: _i11.Future<List<_i23.Photo>>.value(<_i23.Photo>[]),
      ) as _i11.Future<List<_i23.Photo>>);

  @override
  _i11.Future<_i23.Photo?> findPhoto(String? path) => (super.noSuchMethod(
        Invocation.method(
          #findPhoto,
          [path],
        ),
        returnValue: _i11.Future<_i23.Photo?>.value(),
      ) as _i11.Future<_i23.Photo?>);

  @override
  _i11.Future<int> insertPhoto(_i23.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #insertPhoto,
          [photo],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updatePhoto(_i23.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #updatePhoto,
          [photo],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> deletePhoto(_i23.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #deletePhoto,
          [photo],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> deleteAll(int? photoId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [photoId],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertPhotos(List<_i23.Photo>? photos) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertPhotos,
          [photos],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyPhotos() => (super.noSuchMethod(
        Invocation.method(
          #emptyPhotos,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i24.Note>> getAllNotes() => (super.noSuchMethod(
        Invocation.method(
          #getAllNotes,
          [],
        ),
        returnValue: _i11.Future<List<_i24.Note>>.value(<_i24.Note>[]),
      ) as _i11.Future<List<_i24.Note>>);

  @override
  _i11.Future<_i24.Note?> findNote(String? zoneId) => (super.noSuchMethod(
        Invocation.method(
          #findNote,
          [zoneId],
        ),
        returnValue: _i11.Future<_i24.Note?>.value(),
      ) as _i11.Future<_i24.Note?>);

  @override
  _i11.Future<int> insertNote(_i24.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #insertNote,
          [note],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateNote(_i24.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #updateNote,
          [note],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> deleteNote(_i24.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #deleteNote,
          [note],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertNotes(List<_i24.Note>? notes) => (super.noSuchMethod(
        Invocation.method(
          #insertNotes,
          [notes],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyNotes() => (super.noSuchMethod(
        Invocation.method(
          #emptyNotes,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<List<_i25.Error>> getAllErrors() => (super.noSuchMethod(
        Invocation.method(
          #getAllErrors,
          [],
        ),
        returnValue: _i11.Future<List<_i25.Error>>.value(<_i25.Error>[]),
      ) as _i11.Future<List<_i25.Error>>);

  @override
  _i11.Future<int> insertError(_i25.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #insertError,
          [error],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateError(_i25.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #updateError,
          [error],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> deleteError(_i25.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #deleteError,
          [error],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> insertErrors(List<_i25.Error>? errors) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertErrors,
          [errors],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> emptyErrors() => (super.noSuchMethod(
        Invocation.method(
          #emptyErrors,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Stream<List<_i26.Client>> watchAllClients() => (super.noSuchMethod(
        Invocation.method(
          #watchAllClients,
          [],
        ),
        returnValue: _i11.Stream<List<_i26.Client>>.empty(),
      ) as _i11.Stream<List<_i26.Client>>);

  @override
  _i11.Future<List<_i26.Client>> getAllClients() => (super.noSuchMethod(
        Invocation.method(
          #getAllClients,
          [],
        ),
        returnValue: _i11.Future<List<_i26.Client>>.value(<_i26.Client>[]),
      ) as _i11.Future<List<_i26.Client>>);

  @override
  _i11.Future<bool> validateClient(int? id) => (super.noSuchMethod(
        Invocation.method(
          #validateClient,
          [id],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<int> insertClient(_i26.Client? client) => (super.noSuchMethod(
        Invocation.method(
          #insertClient,
          [client],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<int> updateClient(_i26.Client? client) => (super.noSuchMethod(
        Invocation.method(
          #updateClient,
          [client],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<void> emptyClients() => (super.noSuchMethod(
        Invocation.method(
          #emptyClients,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<int> insertHistory(_i27.HistoryOrder? historyOrder) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertHistory,
          [historyOrder],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<_i27.HistoryOrder?> getHistoryOrder(
    String? workcode,
    int? zoneId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoryOrder,
          [
            workcode,
            zoneId,
          ],
        ),
        returnValue: _i11.Future<_i27.HistoryOrder?>.value(),
      ) as _i11.Future<_i27.HistoryOrder?>);

  @override
  _i11.Future<bool> listenForTableChanges(
    String? table,
    String? column,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenForTableChanges,
          [
            table,
            column,
            value,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<_i28.Database?> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i11.Future<_i28.Database?>.value(),
      ) as _i11.Future<_i28.Database?>);

  @override
  _i11.Future<int> insertNotification(_i29.PushNotification? notification) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertNotification,
          [notification],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<List<_i29.PushNotification>> getNotifications() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [],
        ),
        returnValue: _i11.Future<List<_i29.PushNotification>>.value(
            <_i29.PushNotification>[]),
      ) as _i11.Future<List<_i29.PushNotification>>);

  @override
  _i11.Future<void> updateNotification(
    int? notificationId,
    String? readAt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotification,
          [
            notificationId,
            readAt,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<int?> countAllUnreadNotifications() => (super.noSuchMethod(
        Invocation.method(
          #countAllUnreadNotifications,
          [],
        ),
        returnValue: _i11.Future<int?>.value(),
      ) as _i11.Future<int?>);

  @override
  _i11.Future<int> insertPolylines(
    String? workcode,
    List<_i30.LatLng>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertPolylines,
          [
            workcode,
            data,
          ],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Future<List<_i30.LatLng>> getPolylines(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPolylines,
          [workcode],
        ),
        returnValue: _i11.Future<List<_i30.LatLng>>.value(<_i30.LatLng>[]),
      ) as _i11.Future<List<_i30.LatLng>>);

  @override
  _i11.Future<void> deleteProcessingQueueByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteProcessingQueueByDays,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> deleteLocationsByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteLocationsByDays,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> deleteNotificationsByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteNotificationsByDays,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> deleteTransactionByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteTransactionByDays,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
}

/// A class which mocks [ProcessingQueueBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockProcessingQueueBloc extends _i1.Mock
    implements _i7.ProcessingQueueBloc {
  MockProcessingQueueBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.DatabaseRepository get databaseRepository => (super.noSuchMethod(
        Invocation.getter(#databaseRepository),
        returnValue: _FakeDatabaseRepository_1(
          this,
          Invocation.getter(#databaseRepository),
        ),
      ) as _i3.DatabaseRepository);

  @override
  _i4.ApiRepository get apiRepository => (super.noSuchMethod(
        Invocation.getter(#apiRepository),
        returnValue: _FakeApiRepository_2(
          this,
          Invocation.getter(#apiRepository),
        ),
      ) as _i4.ApiRepository);

  @override
  _i5.LocalStorageService get storageService => (super.noSuchMethod(
        Invocation.getter(#storageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#storageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  _i6.HelperFunctions get helperFunctions => (super.noSuchMethod(
        Invocation.getter(#helperFunctions),
        returnValue: _FakeHelperFunctions_4(
          this,
          Invocation.getter(#helperFunctions),
        ),
      ) as _i6.HelperFunctions);

  @override
  List<Map<String, String>> get itemsFilter => (super.noSuchMethod(
        Invocation.getter(#itemsFilter),
        returnValue: <Map<String, String>>[],
      ) as List<Map<String, String>>);

  @override
  List<Map<String, String>> get itemsState => (super.noSuchMethod(
        Invocation.getter(#itemsState),
        returnValue: <Map<String, String>>[],
      ) as List<Map<String, String>>);

  @override
  _i11.Stream<dynamic> get resolve => (super.noSuchMethod(
        Invocation.getter(#resolve),
        returnValue: _i11.Stream<dynamic>.empty(),
      ) as _i11.Stream<dynamic>);

  @override
  _i11.Stream<List<_i2.ProcessingQueue>> get todos => (super.noSuchMethod(
        Invocation.getter(#todos),
        returnValue: _i11.Stream<List<_i2.ProcessingQueue>>.empty(),
      ) as _i11.Stream<List<_i2.ProcessingQueue>>);

  @override
  _i7.ProcessingQueueState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeProcessingQueueState_5(
          this,
          Invocation.getter(#state),
        ),
      ) as _i7.ProcessingQueueState);

  @override
  _i11.Stream<_i7.ProcessingQueueState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i11.Stream<_i7.ProcessingQueueState>.empty(),
      ) as _i11.Stream<_i7.ProcessingQueueState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<int> countProcessingQueueIncompleteToTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #countProcessingQueueIncompleteToTransactions,
          [],
        ),
        returnValue: _i11.Future<int>.value(0),
      ) as _i11.Future<int>);

  @override
  _i11.Stream<List<Map<String, dynamic>>>
      getProcessingQueueIncompleteToTransactions() => (super.noSuchMethod(
            Invocation.method(
              #getProcessingQueueIncompleteToTransactions,
              [],
            ),
            returnValue: _i11.Stream<List<Map<String, dynamic>>>.empty(),
          ) as _i11.Stream<List<Map<String, dynamic>>>);

  @override
  _i11.Future<List<_i2.ProcessingQueue>> getData(
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [
            page,
            limit,
          ],
        ),
        returnValue: _i11.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i11.Future<List<_i2.ProcessingQueue>>);

  @override
  void sendProcessingQueues(List<_i2.ProcessingQueue>? queues) =>
      super.noSuchMethod(
        Invocation.method(
          #sendProcessingQueues,
          [queues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendProcessingQueue(_i2.ProcessingQueue? queue) => super.noSuchMethod(
        Invocation.method(
          #sendProcessingQueue,
          [queue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> validateIfServiceIsCompleted(_i2.ProcessingQueue? p) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateIfServiceIsCompleted,
          [p],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void add(_i7.ProcessingQueueEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i7.ProcessingQueueEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i7.ProcessingQueueState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i7.ProcessingQueueEvent>(
    _i31.EventHandler<E, _i7.ProcessingQueueState>? handler, {
    _i31.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i31.Transition<_i7.ProcessingQueueEvent, _i7.ProcessingQueueState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void onChange(_i31.Change<_i7.ProcessingQueueState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
      ) as String);

  @override
  String date(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #date,
          [date],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #date,
            [date],
          ),
        ),
      ) as String);
}

/// A class which mocks [GpsBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockGpsBloc extends _i1.Mock implements _i9.GpsBloc {
  MockGpsBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_6(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i8.NavigationService);

  @override
  _i5.LocalStorageService get storageService => (super.noSuchMethod(
        Invocation.getter(#storageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#storageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  _i3.DatabaseRepository get databaseRepository => (super.noSuchMethod(
        Invocation.getter(#databaseRepository),
        returnValue: _FakeDatabaseRepository_1(
          this,
          Invocation.getter(#databaseRepository),
        ),
      ) as _i3.DatabaseRepository);

  @override
  set gpsServiceSubscription(
          _i11.StreamSubscription<dynamic>? _gpsServiceSubscription) =>
      super.noSuchMethod(
        Invocation.setter(
          #gpsServiceSubscription,
          _gpsServiceSubscription,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set positionStream(_i11.StreamSubscription<dynamic>? _positionStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #positionStream,
          _positionStream,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lastRecordedLocation(_i30.LatLng? _lastRecordedLocation) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastRecordedLocation,
          _lastRecordedLocation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get showingDialog => (super.noSuchMethod(
        Invocation.getter(#showingDialog),
        returnValue: false,
      ) as bool);

  @override
  set showingDialog(bool? _showingDialog) => super.noSuchMethod(
        Invocation.setter(
          #showingDialog,
          _showingDialog,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.GpsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeGpsState_7(
          this,
          Invocation.getter(#state),
        ),
      ) as _i9.GpsState);

  @override
  _i11.Stream<_i9.GpsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i11.Stream<_i9.GpsState>.empty(),
      ) as _i11.Stream<_i9.GpsState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<void> askGpsAccess() => (super.noSuchMethod(
        Invocation.method(
          #askGpsAccess,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> startFollowingUser(
    _i9.OnStartFollowingUser? event,
    dynamic emit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #startFollowingUser,
          [
            event,
            emit,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> stopFollowingUser(
    _i9.OnStopFollowingUser? event,
    dynamic emit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopFollowingUser,
          [
            event,
            emit,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  double calculateDistanceBetweenTwoLatLng(
    _i30.LatLng? currentPosition,
    _i30.LatLng? radiusPosition,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateDistanceBetweenTwoLatLng,
          [
            currentPosition,
            radiusPosition,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  int calculateDateBetweenTwoLatLng(
    DateTime? date1,
    DateTime? date2,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateDateBetweenTwoLatLng,
          [
            date1,
            date2,
          ],
        ),
        returnValue: 0,
      ) as int);

  @override
  bool calculateRadiusBetweenTwoLatLng(
    _i30.LatLng? currentPosition,
    _i30.LatLng? radiusPosition,
    double? radius,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateRadiusBetweenTwoLatLng,
          [
            currentPosition,
            radiusPosition,
            radius,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i11.Future<void> saveLocation(
    String? type,
    _i32.Position? position,
    int? send,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLocation,
          [
            type,
            position,
            send,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void add(_i9.GpsEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i9.GpsEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i9.GpsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i9.GpsEvent>(
    _i31.EventHandler<E, _i9.GpsState>? handler, {
    _i31.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(_i31.Transition<_i9.GpsEvent, _i9.GpsState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i31.Change<_i9.GpsState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
      ) as String);

  @override
  String date(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #date,
          [date],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #date,
            [date],
          ),
        ),
      ) as String);
}

/// A class which mocks [NetworkBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkBloc extends _i1.Mock implements _i10.NetworkBloc {
  MockNetworkBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.NetworkState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeNetworkState_8(
          this,
          Invocation.getter(#state),
        ),
      ) as _i10.NetworkState);

  @override
  _i11.Stream<_i10.NetworkState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i11.Stream<_i10.NetworkState>.empty(),
      ) as _i11.Stream<_i10.NetworkState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void add(_i10.NetworkEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i10.NetworkEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i10.NetworkState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i10.NetworkEvent>(
    _i31.EventHandler<E, _i10.NetworkState>? handler, {
    _i31.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i31.Transition<_i10.NetworkEvent, _i10.NetworkState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void onChange(_i31.Change<_i10.NetworkState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
