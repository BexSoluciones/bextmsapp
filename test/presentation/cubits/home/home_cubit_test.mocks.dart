// Mocks generated by Mockito 5.4.4 from annotations
// in bexdeliveries/test/presentation/cubits/home/home_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:bexdeliveries/core/helpers/index.dart' as _i7;
import 'package:bexdeliveries/src/domain/models/account.dart' as _i21;
import 'package:bexdeliveries/src/domain/models/client.dart' as _i27;
import 'package:bexdeliveries/src/domain/models/error.dart' as _i26;
import 'package:bexdeliveries/src/domain/models/history_order.dart' as _i28;
import 'package:bexdeliveries/src/domain/models/location.dart' as _i22;
import 'package:bexdeliveries/src/domain/models/news.dart' as _i14;
import 'package:bexdeliveries/src/domain/models/note.dart' as _i25;
import 'package:bexdeliveries/src/domain/models/notification.dart' as _i30;
import 'package:bexdeliveries/src/domain/models/photo.dart' as _i24;
import 'package:bexdeliveries/src/domain/models/processing_queue.dart' as _i2;
import 'package:bexdeliveries/src/domain/models/reason.dart' as _i20;
import 'package:bexdeliveries/src/domain/models/requests/account_request.dart'
    as _i39;
import 'package:bexdeliveries/src/domain/models/requests/client_request.dart'
    as _i54;
import 'package:bexdeliveries/src/domain/models/requests/database_request.dart'
    as _i47;
import 'package:bexdeliveries/src/domain/models/requests/enterprise_config_request.dart'
    as _i35;
import 'package:bexdeliveries/src/domain/models/requests/enterprise_request.dart'
    as _i33;
import 'package:bexdeliveries/src/domain/models/requests/history_order_saved_request.dart'
    as _i59;
import 'package:bexdeliveries/src/domain/models/requests/history_order_updated_request.dart'
    as _i63;
import 'package:bexdeliveries/src/domain/models/requests/locations_request.dart'
    as _i64;
import 'package:bexdeliveries/src/domain/models/requests/login_request.dart'
    as _i41;
import 'package:bexdeliveries/src/domain/models/requests/logout_request.dart'
    as _i43;
import 'package:bexdeliveries/src/domain/models/requests/prediction_request.dart'
    as _i57;
import 'package:bexdeliveries/src/domain/models/requests/reason_m_request.dart'
    as _i65;
import 'package:bexdeliveries/src/domain/models/requests/reason_request.dart'
    as _i37;
import 'package:bexdeliveries/src/domain/models/requests/routing_request.dart'
    as _i61;
import 'package:bexdeliveries/src/domain/models/requests/send_token.dart'
    as _i55;
import 'package:bexdeliveries/src/domain/models/requests/status_request.dart'
    as _i49;
import 'package:bexdeliveries/src/domain/models/requests/transaction_request.dart'
    as _i51;
import 'package:bexdeliveries/src/domain/models/requests/transaction_summary_request.dart'
    as _i52;
import 'package:bexdeliveries/src/domain/models/requests/work_request.dart'
    as _i45;
import 'package:bexdeliveries/src/domain/models/responses/account_response.dart'
    as _i38;
import 'package:bexdeliveries/src/domain/models/responses/database_response.dart'
    as _i46;
import 'package:bexdeliveries/src/domain/models/responses/enterprise_config_response.dart'
    as _i34;
import 'package:bexdeliveries/src/domain/models/responses/enterprise_response.dart'
    as _i32;
import 'package:bexdeliveries/src/domain/models/responses/history_order_saved_response.dart'
    as _i58;
import 'package:bexdeliveries/src/domain/models/responses/history_order_updated_response.dart'
    as _i62;
import 'package:bexdeliveries/src/domain/models/responses/login_response.dart'
    as _i40;
import 'package:bexdeliveries/src/domain/models/responses/logout_response.dart'
    as _i42;
import 'package:bexdeliveries/src/domain/models/responses/prediction_response.dart'
    as _i56;
import 'package:bexdeliveries/src/domain/models/responses/reason_response.dart'
    as _i36;
import 'package:bexdeliveries/src/domain/models/responses/routing_response.dart'
    as _i60;
import 'package:bexdeliveries/src/domain/models/responses/status_response.dart'
    as _i48;
import 'package:bexdeliveries/src/domain/models/responses/transaction_response.dart'
    as _i50;
import 'package:bexdeliveries/src/domain/models/responses/transaction_summary_response.dart'
    as _i53;
import 'package:bexdeliveries/src/domain/models/responses/work_response.dart'
    as _i44;
import 'package:bexdeliveries/src/domain/models/summary.dart' as _i16;
import 'package:bexdeliveries/src/domain/models/summary_report.dart' as _i17;
import 'package:bexdeliveries/src/domain/models/transaction.dart' as _i18;
import 'package:bexdeliveries/src/domain/models/transaction_summary.dart'
    as _i19;
import 'package:bexdeliveries/src/domain/models/warehouse.dart' as _i15;
import 'package:bexdeliveries/src/domain/models/work.dart' as _i13;
import 'package:bexdeliveries/src/domain/repositories/api_repository.dart'
    as _i5;
import 'package:bexdeliveries/src/domain/repositories/database_repository.dart'
    as _i4;
import 'package:bexdeliveries/src/presentation/blocs/gps/gps_bloc.dart' as _i10;
import 'package:bexdeliveries/src/presentation/blocs/network/network_bloc.dart'
    as _i11;
import 'package:bexdeliveries/src/presentation/blocs/processing_queue/processing_queue_bloc.dart'
    as _i8;
import 'package:bexdeliveries/src/services/navigation.dart' as _i9;
import 'package:bexdeliveries/src/services/storage.dart' as _i6;
import 'package:bexdeliveries/src/utils/resources/data_state.dart' as _i3;
import 'package:flutter_bloc/flutter_bloc.dart' as _i66;
import 'package:geolocator/geolocator.dart' as _i67;
import 'package:latlong2/latlong.dart' as _i31;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i23;
import 'package:sqflite/sqflite.dart' as _i29;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProcessingQueue_0 extends _i1.SmartFake
    implements _i2.ProcessingQueue {
  _FakeProcessingQueue_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataState_1<T> extends _i1.SmartFake implements _i3.DataState<T> {
  _FakeDataState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseRepository_2 extends _i1.SmartFake
    implements _i4.DatabaseRepository {
  _FakeDatabaseRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiRepository_3 extends _i1.SmartFake implements _i5.ApiRepository {
  _FakeApiRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalStorageService_4 extends _i1.SmartFake
    implements _i6.LocalStorageService {
  _FakeLocalStorageService_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHelperFunctions_5 extends _i1.SmartFake
    implements _i7.HelperFunctions {
  _FakeHelperFunctions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProcessingQueueState_6 extends _i1.SmartFake
    implements _i8.ProcessingQueueState {
  _FakeProcessingQueueState_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationService_7 extends _i1.SmartFake
    implements _i9.NavigationService {
  _FakeNavigationService_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGpsState_8 extends _i1.SmartFake implements _i10.GpsState {
  _FakeGpsState_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkState_9 extends _i1.SmartFake implements _i11.NetworkState {
  _FakeNetworkState_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseRepository extends _i1.Mock
    implements _i4.DatabaseRepository {
  MockDatabaseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<List<_i13.Work>> getAllWorks() => (super.noSuchMethod(
        Invocation.method(
          #getAllWorks,
          [],
        ),
        returnValue: _i12.Future<List<_i13.Work>>.value(<_i13.Work>[]),
      ) as _i12.Future<List<_i13.Work>>);

  @override
  _i12.Future<List<_i13.Work>> findAllWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #findAllWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i12.Future<List<_i13.Work>>.value(<_i13.Work>[]),
      ) as _i12.Future<List<_i13.Work>>);

  @override
  _i12.Future<List<_i13.Work>> findAllWorksPaginatedByWorkcode(
    String? workcode,
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findAllWorksPaginatedByWorkcode,
          [
            workcode,
            page,
            limit,
          ],
        ),
        returnValue: _i12.Future<List<_i13.Work>>.value(<_i13.Work>[]),
      ) as _i12.Future<List<_i13.Work>>);

  @override
  _i12.Future<List<String>?> completeWorks() => (super.noSuchMethod(
        Invocation.method(
          #completeWorks,
          [],
        ),
        returnValue: _i12.Future<List<String>?>.value(),
      ) as _i12.Future<List<String>?>);

  @override
  _i12.Future<int> countAllWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #countAllWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> insertWork(_i13.Work? work) => (super.noSuchMethod(
        Invocation.method(
          #insertWork,
          [work],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateWork(_i13.Work? work) => (super.noSuchMethod(
        Invocation.method(
          #updateWork,
          [work],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateStatusWork(
    String? workcode,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStatusWork,
          [
            workcode,
            status,
          ],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertWorks(List<_i13.Work>? works) => (super.noSuchMethod(
        Invocation.method(
          #insertWorks,
          [works],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyWorks() => (super.noSuchMethod(
        Invocation.method(
          #emptyWorks,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<_i13.WorkTypes?> getWorkTypesFromWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkTypesFromWorkcode,
          [workcode],
        ),
        returnValue: _i12.Future<_i13.WorkTypes?>.value(),
      ) as _i12.Future<_i13.WorkTypes?>);

  @override
  _i12.Future<List<_i13.WorkAdditional>> getClientsResJetDel(
    String? workcode,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClientsResJetDel,
          [
            workcode,
            reason,
          ],
        ),
        returnValue: _i12.Future<List<_i13.WorkAdditional>>.value(
            <_i13.WorkAdditional>[]),
      ) as _i12.Future<List<_i13.WorkAdditional>>);

  @override
  _i12.Future<void> insertNews(_i14.News? news) => (super.noSuchMethod(
        Invocation.method(
          #insertNews,
          [news],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i15.Warehouse>> getAllWarehouses() => (super.noSuchMethod(
        Invocation.method(
          #getAllWarehouses,
          [],
        ),
        returnValue:
            _i12.Future<List<_i15.Warehouse>>.value(<_i15.Warehouse>[]),
      ) as _i12.Future<List<_i15.Warehouse>>);

  @override
  _i12.Future<_i15.Warehouse?> findWarehouse(int? id) => (super.noSuchMethod(
        Invocation.method(
          #findWarehouse,
          [id],
        ),
        returnValue: _i12.Future<_i15.Warehouse?>.value(),
      ) as _i12.Future<_i15.Warehouse?>);

  @override
  _i12.Future<int> insertWarehouse(_i15.Warehouse? warehouse) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWarehouse,
          [warehouse],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateWarehouse(_i15.Warehouse? warehouse) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWarehouse,
          [warehouse],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertWarehouses(List<_i15.Warehouse>? warehouses) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWarehouses,
          [warehouses],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyWarehouses() => (super.noSuchMethod(
        Invocation.method(
          #emptyWarehouses,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i16.Summary>> getAllSummariesByOrderNumber(int? workId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByOrderNumber,
          [workId],
        ),
        returnValue: _i12.Future<List<_i16.Summary>>.value(<_i16.Summary>[]),
      ) as _i12.Future<List<_i16.Summary>>);

  @override
  _i12.Future<List<_i16.Summary>> getAllSummariesByWorkcode(
    int? workId,
    String? customer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByWorkcode,
          [
            workId,
            customer,
          ],
        ),
        returnValue: _i12.Future<List<_i16.Summary>>.value(<_i16.Summary>[]),
      ) as _i12.Future<List<_i16.Summary>>);

  @override
  _i12.Future<List<_i16.Summary>> getAllInventoryByOrderNumber(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllInventoryByOrderNumber,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i12.Future<List<_i16.Summary>>.value(<_i16.Summary>[]),
      ) as _i12.Future<List<_i16.Summary>>);

  @override
  _i12.Future<List<_i16.Summary>> getAllInventoryByPackage(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllInventoryByPackage,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i12.Future<List<_i16.Summary>>.value(<_i16.Summary>[]),
      ) as _i12.Future<List<_i16.Summary>>);

  @override
  _i12.Future<List<_i16.Summary>> getAllPackageByOrderNumber(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPackageByOrderNumber,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i12.Future<List<_i16.Summary>>.value(<_i16.Summary>[]),
      ) as _i12.Future<List<_i16.Summary>>);

  @override
  _i12.Future<List<_i16.Summary>> watchAllItemsPackage(
    String? orderNumber,
    String? packing,
    String? idPacking,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllItemsPackage,
          [
            orderNumber,
            packing,
            idPacking,
          ],
        ),
        returnValue: _i12.Future<List<_i16.Summary>>.value(<_i16.Summary>[]),
      ) as _i12.Future<List<_i16.Summary>>);

  @override
  _i12.Future<List<_i16.Summary>> getAllSummariesByOrderNumberMoved(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByOrderNumberMoved,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i12.Future<List<_i16.Summary>>.value(<_i16.Summary>[]),
      ) as _i12.Future<List<_i16.Summary>>);

  @override
  _i12.Future<List<_i17.SummaryReport>> getSummaryReportsWithReasonOrRedelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithReasonOrRedelivery,
          [orderNumber],
        ),
        returnValue:
            _i12.Future<List<_i17.SummaryReport>>.value(<_i17.SummaryReport>[]),
      ) as _i12.Future<List<_i17.SummaryReport>>);

  @override
  _i12.Future<List<_i17.SummaryReport>> getSummaryReportsWithReturnOrRedelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithReturnOrRedelivery,
          [orderNumber],
        ),
        returnValue:
            _i12.Future<List<_i17.SummaryReport>>.value(<_i17.SummaryReport>[]),
      ) as _i12.Future<List<_i17.SummaryReport>>);

  @override
  _i12.Future<List<_i17.SummaryReport>> getSummaryReportsWithDelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithDelivery,
          [orderNumber],
        ),
        returnValue:
            _i12.Future<List<_i17.SummaryReport>>.value(<_i17.SummaryReport>[]),
      ) as _i12.Future<List<_i17.SummaryReport>>);

  @override
  _i12.Future<double> countTotalRespawnWorksByWorkcode(
    String? workcode,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #countTotalRespawnWorksByWorkcode,
          [
            workcode,
            reason,
          ],
        ),
        returnValue: _i12.Future<double>.value(0.0),
      ) as _i12.Future<double>);

  @override
  _i12.Future<bool> resetCantSummaries(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetCantSummaries,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<double> getTotalSummaries(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalSummaries,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i12.Future<double>.value(0.0),
      ) as _i12.Future<double>);

  @override
  _i12.Future<int> getTotalPackageSummaries(String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalPackageSummaries,
          [orderNumber],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> getTotalPackageSummariesLoose(String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalPackageSummariesLoose,
          [orderNumber],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> insertSummary(_i16.Summary? summary) => (super.noSuchMethod(
        Invocation.method(
          #insertSummary,
          [summary],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateSummary(_i16.Summary? summary) => (super.noSuchMethod(
        Invocation.method(
          #updateSummary,
          [summary],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertSummaries(List<_i16.Summary>? summaries) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertSummaries,
          [summaries],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptySummaries() => (super.noSuchMethod(
        Invocation.method(
          #emptySummaries,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteSummariesByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSummariesByWorkcode,
          [workcode],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i18.Transaction>> getAllTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTransactions,
          [],
        ),
        returnValue:
            _i12.Future<List<_i18.Transaction>>.value(<_i18.Transaction>[]),
      ) as _i12.Future<List<_i18.Transaction>>);

  @override
  _i12.Future<String?> getDiffTime(int? workId) => (super.noSuchMethod(
        Invocation.method(
          #getDiffTime,
          [workId],
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.Future<double?> countTotalCollectionWorks() => (super.noSuchMethod(
        Invocation.method(
          #countTotalCollectionWorks,
          [],
        ),
        returnValue: _i12.Future<double?>.value(),
      ) as _i12.Future<double?>);

  @override
  _i12.Future<int> insertTransaction(_i18.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransaction,
          [transaction],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> insertTransactionSummary(
          _i19.TransactionSummary? transactionSummary) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransactionSummary,
          [transactionSummary],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<bool> validateTransaction(int? workId) => (super.noSuchMethod(
        Invocation.method(
          #validateTransaction,
          [workId],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> validateTransactionArrived(
    int? workId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateTransactionArrived,
          [
            workId,
            status,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> validateTransactionSummary(
    String? workcode,
    String? orderNumber,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateTransactionSummary,
          [
            workcode,
            orderNumber,
            status,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> checkLastTransaction(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkLastTransaction,
          [workcode],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> checkLastProduct(int? transactionId) => (super.noSuchMethod(
        Invocation.method(
          #checkLastProduct,
          [transactionId],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<int> updateTransaction(_i18.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTransaction,
          [transaction],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertTransactions(List<_i18.Transaction>? transactions) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransactions,
          [transactions],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyTransactions() => (super.noSuchMethod(
        Invocation.method(
          #emptyTransactions,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteTransactionsByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTransactionsByWorkcode,
          [workcode],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<int> countLeftClients(String? workcode) => (super.noSuchMethod(
        Invocation.method(
          #countLeftClients,
          [workcode],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<double> countTotalCollectionWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #countTotalCollectionWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i12.Future<double>.value(0.0),
      ) as _i12.Future<double>);

  @override
  _i12.Future<bool> verifyTransactionExistence(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyTransactionExistence,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<List<_i20.Reason>> getAllReasons() => (super.noSuchMethod(
        Invocation.method(
          #getAllReasons,
          [],
        ),
        returnValue: _i12.Future<List<_i20.Reason>>.value(<_i20.Reason>[]),
      ) as _i12.Future<List<_i20.Reason>>);

  @override
  _i12.Future<_i20.Reason?> findReason(String? name) => (super.noSuchMethod(
        Invocation.method(
          #findReason,
          [name],
        ),
        returnValue: _i12.Future<_i20.Reason?>.value(),
      ) as _i12.Future<_i20.Reason?>);

  @override
  _i12.Future<int> insertReason(_i20.Reason? reason) => (super.noSuchMethod(
        Invocation.method(
          #insertReason,
          [reason],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateReason(_i20.Reason? reason) => (super.noSuchMethod(
        Invocation.method(
          #updateReason,
          [reason],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertReasons(List<_i20.Reason>? reasons) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertReasons,
          [reasons],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyReasons() => (super.noSuchMethod(
        Invocation.method(
          #emptyReasons,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i21.Account>> getAllAccounts() => (super.noSuchMethod(
        Invocation.method(
          #getAllAccounts,
          [],
        ),
        returnValue: _i12.Future<List<_i21.Account>>.value(<_i21.Account>[]),
      ) as _i12.Future<List<_i21.Account>>);

  @override
  _i12.Future<int> insertAccount(_i21.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #insertAccount,
          [account],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateAccount(_i21.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #updateAccount,
          [account],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertAccounts(List<_i21.Account>? accounts) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAccounts,
          [accounts],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyAccounts() => (super.noSuchMethod(
        Invocation.method(
          #emptyAccounts,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i2.ProcessingQueue>> getAllProcessingQueues(
    String? code,
    String? task,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueues,
          [
            code,
            task,
          ],
        ),
        returnValue: _i12.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i12.Future<List<_i2.ProcessingQueue>>);

  @override
  _i12.Future<List<_i2.ProcessingQueue>> getAllProcessingQueuesPaginated(
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueuesPaginated,
          [
            page,
            limit,
          ],
        ),
        returnValue: _i12.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i12.Future<List<_i2.ProcessingQueue>>);

  @override
  _i12.Future<_i2.ProcessingQueue> findProcessingQueue(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #findProcessingQueue,
          [id],
        ),
        returnValue:
            _i12.Future<_i2.ProcessingQueue>.value(_FakeProcessingQueue_0(
          this,
          Invocation.method(
            #findProcessingQueue,
            [id],
          ),
        )),
      ) as _i12.Future<_i2.ProcessingQueue>);

  @override
  _i12.Stream<List<_i2.ProcessingQueue>> watchAllProcessingQueues() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllProcessingQueues,
          [],
        ),
        returnValue: _i12.Stream<List<_i2.ProcessingQueue>>.empty(),
      ) as _i12.Stream<List<_i2.ProcessingQueue>>);

  @override
  _i12.Future<List<_i2.ProcessingQueue>> getAllProcessingQueuesIncomplete() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueuesIncomplete,
          [],
        ),
        returnValue: _i12.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i12.Future<List<_i2.ProcessingQueue>>);

  @override
  _i12.Future<int> countProcessingQueueIncompleteToTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #countProcessingQueueIncompleteToTransactions,
          [],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Stream<List<Map<String, dynamic>>>
      getProcessingQueueIncompleteToTransactions() => (super.noSuchMethod(
            Invocation.method(
              #getProcessingQueueIncompleteToTransactions,
              [],
            ),
            returnValue: _i12.Stream<List<Map<String, dynamic>>>.empty(),
          ) as _i12.Stream<List<Map<String, dynamic>>>);

  @override
  _i12.Future<bool> validateIfProcessingQueueIsIncomplete() =>
      (super.noSuchMethod(
        Invocation.method(
          #validateIfProcessingQueueIsIncomplete,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<int> updateProcessingQueue(
          _i2.ProcessingQueue? processingQueue) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProcessingQueue,
          [processingQueue],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> insertProcessingQueue(
          _i2.ProcessingQueue? processingQueue) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertProcessingQueue,
          [processingQueue],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> emptyProcessingQueues() => (super.noSuchMethod(
        Invocation.method(
          #emptyProcessingQueues,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Stream<List<_i22.Location>> watchAllLocations() => (super.noSuchMethod(
        Invocation.method(
          #watchAllLocations,
          [],
        ),
        returnValue: _i12.Stream<List<_i22.Location>>.empty(),
      ) as _i12.Stream<List<_i22.Location>>);

  @override
  _i12.Future<List<_i22.Location>> getAllLocations() => (super.noSuchMethod(
        Invocation.method(
          #getAllLocations,
          [],
        ),
        returnValue: _i12.Future<List<_i22.Location>>.value(<_i22.Location>[]),
      ) as _i12.Future<List<_i22.Location>>);

  @override
  _i12.Future<_i22.Location?> getLastLocation() => (super.noSuchMethod(
        Invocation.method(
          #getLastLocation,
          [],
        ),
        returnValue: _i12.Future<_i22.Location?>.value(),
      ) as _i12.Future<_i22.Location?>);

  @override
  _i12.Future<bool> countLocationsManager() => (super.noSuchMethod(
        Invocation.method(
          #countLocationsManager,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<String> getLocationsToSend() => (super.noSuchMethod(
        Invocation.method(
          #getLocationsToSend,
          [],
        ),
        returnValue: _i12.Future<String>.value(_i23.dummyValue<String>(
          this,
          Invocation.method(
            #getLocationsToSend,
            [],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<int?> updateLocationsManager() => (super.noSuchMethod(
        Invocation.method(
          #updateLocationsManager,
          [],
        ),
        returnValue: _i12.Future<int?>.value(),
      ) as _i12.Future<int?>);

  @override
  _i12.Future<int> updateLocation(_i22.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocation,
          [location],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertLocation(_i22.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertLocation,
          [location],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyLocations() => (super.noSuchMethod(
        Invocation.method(
          #emptyLocations,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i24.Photo>> getAllPhotos() => (super.noSuchMethod(
        Invocation.method(
          #getAllPhotos,
          [],
        ),
        returnValue: _i12.Future<List<_i24.Photo>>.value(<_i24.Photo>[]),
      ) as _i12.Future<List<_i24.Photo>>);

  @override
  _i12.Future<_i24.Photo?> findPhoto(String? path) => (super.noSuchMethod(
        Invocation.method(
          #findPhoto,
          [path],
        ),
        returnValue: _i12.Future<_i24.Photo?>.value(),
      ) as _i12.Future<_i24.Photo?>);

  @override
  _i12.Future<int> insertPhoto(_i24.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #insertPhoto,
          [photo],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updatePhoto(_i24.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #updatePhoto,
          [photo],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> deletePhoto(_i24.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #deletePhoto,
          [photo],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> deleteAll(int? photoId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [photoId],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertPhotos(List<_i24.Photo>? photos) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertPhotos,
          [photos],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyPhotos() => (super.noSuchMethod(
        Invocation.method(
          #emptyPhotos,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i25.Note>> getAllNotes() => (super.noSuchMethod(
        Invocation.method(
          #getAllNotes,
          [],
        ),
        returnValue: _i12.Future<List<_i25.Note>>.value(<_i25.Note>[]),
      ) as _i12.Future<List<_i25.Note>>);

  @override
  _i12.Future<_i25.Note?> findNote(String? zoneId) => (super.noSuchMethod(
        Invocation.method(
          #findNote,
          [zoneId],
        ),
        returnValue: _i12.Future<_i25.Note?>.value(),
      ) as _i12.Future<_i25.Note?>);

  @override
  _i12.Future<int> insertNote(_i25.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #insertNote,
          [note],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateNote(_i25.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #updateNote,
          [note],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> deleteNote(_i25.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #deleteNote,
          [note],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertNotes(List<_i25.Note>? notes) => (super.noSuchMethod(
        Invocation.method(
          #insertNotes,
          [notes],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyNotes() => (super.noSuchMethod(
        Invocation.method(
          #emptyNotes,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i26.Error>> getAllErrors() => (super.noSuchMethod(
        Invocation.method(
          #getAllErrors,
          [],
        ),
        returnValue: _i12.Future<List<_i26.Error>>.value(<_i26.Error>[]),
      ) as _i12.Future<List<_i26.Error>>);

  @override
  _i12.Future<int> insertError(_i26.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #insertError,
          [error],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateError(_i26.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #updateError,
          [error],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> deleteError(_i26.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #deleteError,
          [error],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> insertErrors(List<_i26.Error>? errors) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertErrors,
          [errors],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> emptyErrors() => (super.noSuchMethod(
        Invocation.method(
          #emptyErrors,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Stream<List<_i27.Client>> watchAllClients() => (super.noSuchMethod(
        Invocation.method(
          #watchAllClients,
          [],
        ),
        returnValue: _i12.Stream<List<_i27.Client>>.empty(),
      ) as _i12.Stream<List<_i27.Client>>);

  @override
  _i12.Future<List<_i27.Client>> getAllClients() => (super.noSuchMethod(
        Invocation.method(
          #getAllClients,
          [],
        ),
        returnValue: _i12.Future<List<_i27.Client>>.value(<_i27.Client>[]),
      ) as _i12.Future<List<_i27.Client>>);

  @override
  _i12.Future<bool> validateClient(int? id) => (super.noSuchMethod(
        Invocation.method(
          #validateClient,
          [id],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<int> insertClient(_i27.Client? client) => (super.noSuchMethod(
        Invocation.method(
          #insertClient,
          [client],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<int> updateClient(_i27.Client? client) => (super.noSuchMethod(
        Invocation.method(
          #updateClient,
          [client],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<void> emptyClients() => (super.noSuchMethod(
        Invocation.method(
          #emptyClients,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<int> insertHistory(_i28.HistoryOrder? historyOrder) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertHistory,
          [historyOrder],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<_i28.HistoryOrder?> getHistoryOrder(
    String? workcode,
    int? zoneId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoryOrder,
          [
            workcode,
            zoneId,
          ],
        ),
        returnValue: _i12.Future<_i28.HistoryOrder?>.value(),
      ) as _i12.Future<_i28.HistoryOrder?>);

  @override
  _i12.Future<bool> listenForTableChanges(
    String? table,
    String? column,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenForTableChanges,
          [
            table,
            column,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<_i29.Database?> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i12.Future<_i29.Database?>.value(),
      ) as _i12.Future<_i29.Database?>);

  @override
  _i12.Future<int> insertNotification(_i30.PushNotification? notification) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertNotification,
          [notification],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<List<_i30.PushNotification>> getNotifications() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [],
        ),
        returnValue: _i12.Future<List<_i30.PushNotification>>.value(
            <_i30.PushNotification>[]),
      ) as _i12.Future<List<_i30.PushNotification>>);

  @override
  _i12.Future<void> updateNotification(
    int? notificationId,
    String? readAt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotification,
          [
            notificationId,
            readAt,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<int?> countAllUnreadNotifications() => (super.noSuchMethod(
        Invocation.method(
          #countAllUnreadNotifications,
          [],
        ),
        returnValue: _i12.Future<int?>.value(),
      ) as _i12.Future<int?>);

  @override
  _i12.Future<int> insertPolylines(
    String? workcode,
    List<_i31.LatLng>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertPolylines,
          [
            workcode,
            data,
          ],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Future<List<_i31.LatLng>> getPolylines(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPolylines,
          [workcode],
        ),
        returnValue: _i12.Future<List<_i31.LatLng>>.value(<_i31.LatLng>[]),
      ) as _i12.Future<List<_i31.LatLng>>);

  @override
  _i12.Future<void> deleteProcessingQueueByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteProcessingQueueByDays,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteLocationsByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteLocationsByDays,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteNotificationsByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteNotificationsByDays,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteTransactionByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteTransactionByDays,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [ApiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRepository extends _i1.Mock implements _i5.ApiRepository {
  MockApiRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i3.DataState<_i32.EnterpriseResponse>> getEnterprise(
          {required _i33.EnterpriseRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEnterprise,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i32.EnterpriseResponse>>.value(
            _FakeDataState_1<_i32.EnterpriseResponse>(
          this,
          Invocation.method(
            #getEnterprise,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i32.EnterpriseResponse>>);

  @override
  _i12.Future<_i3.DataState<_i34.EnterpriseConfigResponse>> getConfigEnterprise(
          {required _i35.EnterpriseConfigRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConfigEnterprise,
          [],
          {#request: request},
        ),
        returnValue:
            _i12.Future<_i3.DataState<_i34.EnterpriseConfigResponse>>.value(
                _FakeDataState_1<_i34.EnterpriseConfigResponse>(
          this,
          Invocation.method(
            #getConfigEnterprise,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i34.EnterpriseConfigResponse>>);

  @override
  _i12.Future<_i3.DataState<_i36.ReasonResponse>> reasons(
          {required _i37.ReasonRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #reasons,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i36.ReasonResponse>>.value(
            _FakeDataState_1<_i36.ReasonResponse>(
          this,
          Invocation.method(
            #reasons,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i36.ReasonResponse>>);

  @override
  _i12.Future<_i3.DataState<_i38.AccountResponse>> accounts(
          {required _i39.AccountRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #accounts,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i38.AccountResponse>>.value(
            _FakeDataState_1<_i38.AccountResponse>(
          this,
          Invocation.method(
            #accounts,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i38.AccountResponse>>);

  @override
  _i12.Future<_i3.DataState<_i40.LoginResponse>?> login(
          {required _i41.LoginRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i40.LoginResponse>?>.value(),
      ) as _i12.Future<_i3.DataState<_i40.LoginResponse>?>);

  @override
  _i12.Future<_i3.DataState<_i42.LogoutResponse>> logout(
          {required _i43.LogoutRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i42.LogoutResponse>>.value(
            _FakeDataState_1<_i42.LogoutResponse>(
          this,
          Invocation.method(
            #logout,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i42.LogoutResponse>>);

  @override
  _i12.Future<_i3.DataState<_i44.WorkResponse>> works(
          {required _i45.WorkRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #works,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i44.WorkResponse>>.value(
            _FakeDataState_1<_i44.WorkResponse>(
          this,
          Invocation.method(
            #works,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i44.WorkResponse>>);

  @override
  _i12.Future<_i3.DataState<_i46.DatabaseResponse>> database(
          {required _i47.DatabaseRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #database,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i46.DatabaseResponse>>.value(
            _FakeDataState_1<_i46.DatabaseResponse>(
          this,
          Invocation.method(
            #database,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i46.DatabaseResponse>>);

  @override
  _i12.Future<_i3.DataState<_i48.StatusResponse>?> status(
          {required _i49.StatusRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #status,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i48.StatusResponse>?>.value(),
      ) as _i12.Future<_i3.DataState<_i48.StatusResponse>?>);

  @override
  _i12.Future<_i3.DataState<_i50.TransactionResponse>?> start(
          {required _i51.TransactionRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #start,
          [],
          {#request: request},
        ),
        returnValue:
            _i12.Future<_i3.DataState<_i50.TransactionResponse>?>.value(),
      ) as _i12.Future<_i3.DataState<_i50.TransactionResponse>?>);

  @override
  _i12.Future<_i3.DataState<_i50.TransactionResponse>?> arrived(
          {required _i51.TransactionRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #arrived,
          [],
          {#request: request},
        ),
        returnValue:
            _i12.Future<_i3.DataState<_i50.TransactionResponse>?>.value(),
      ) as _i12.Future<_i3.DataState<_i50.TransactionResponse>?>);

  @override
  _i12.Future<_i3.DataState<_i50.TransactionResponse>?> summary(
          {required _i51.TransactionRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #summary,
          [],
          {#request: request},
        ),
        returnValue:
            _i12.Future<_i3.DataState<_i50.TransactionResponse>?>.value(),
      ) as _i12.Future<_i3.DataState<_i50.TransactionResponse>?>);

  @override
  _i12.Future<_i3.DataState<_i50.TransactionResponse>?> index(
          {required _i51.TransactionRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #index,
          [],
          {#request: request},
        ),
        returnValue:
            _i12.Future<_i3.DataState<_i50.TransactionResponse>?>.value(),
      ) as _i12.Future<_i3.DataState<_i50.TransactionResponse>?>);

  @override
  _i12.Future<_i3.DataState<_i50.TransactionResponse>?> transaction(
          {required _i52.TransactionSummaryRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [],
          {#request: request},
        ),
        returnValue:
            _i12.Future<_i3.DataState<_i50.TransactionResponse>?>.value(),
      ) as _i12.Future<_i3.DataState<_i50.TransactionResponse>?>);

  @override
  _i12.Future<_i3.DataState<_i53.TransactionSummaryResponse>?> product(
          {required _i52.TransactionSummaryRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #product,
          [],
          {#request: request},
        ),
        returnValue: _i12
            .Future<_i3.DataState<_i53.TransactionSummaryResponse>?>.value(),
      ) as _i12.Future<_i3.DataState<_i53.TransactionSummaryResponse>?>);

  @override
  _i12.Future<_i3.DataState<_i48.StatusResponse>> georeference(
          {required _i54.ClientRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #georeference,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i48.StatusResponse>>.value(
            _FakeDataState_1<_i48.StatusResponse>(
          this,
          Invocation.method(
            #georeference,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i48.StatusResponse>>);

  @override
  _i12.Future<_i3.DataState<_i48.StatusResponse>> sendFCMToken(
          {required _i55.SendTokenRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFCMToken,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i48.StatusResponse>>.value(
            _FakeDataState_1<_i48.StatusResponse>(
          this,
          Invocation.method(
            #sendFCMToken,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i48.StatusResponse>>);

  @override
  _i12.Future<_i3.DataState<_i56.PredictionResponse>> prediction(
          {required _i57.PredictionRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #prediction,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i56.PredictionResponse>>.value(
            _FakeDataState_1<_i56.PredictionResponse>(
          this,
          Invocation.method(
            #prediction,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i56.PredictionResponse>>);

  @override
  _i12.Future<_i3.DataState<_i58.HistoryOrderSavedResponse>> historyOrderSaved(
          {required _i59.HistoryOrderSavedRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #historyOrderSaved,
          [],
          {#request: request},
        ),
        returnValue:
            _i12.Future<_i3.DataState<_i58.HistoryOrderSavedResponse>>.value(
                _FakeDataState_1<_i58.HistoryOrderSavedResponse>(
          this,
          Invocation.method(
            #historyOrderSaved,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i58.HistoryOrderSavedResponse>>);

  @override
  _i12.Future<_i3.DataState<_i60.RoutingResponse>> routing(
          {required _i61.RoutingRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #routing,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i60.RoutingResponse>>.value(
            _FakeDataState_1<_i60.RoutingResponse>(
          this,
          Invocation.method(
            #routing,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i60.RoutingResponse>>);

  @override
  _i12.Future<
      _i3.DataState<_i62.HistoryOrderUpdatedResponse>> historyOrderUpdated(
          {required _i63.HistoryOrderUpdatedRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #historyOrderUpdated,
          [],
          {#request: request},
        ),
        returnValue:
            _i12.Future<_i3.DataState<_i62.HistoryOrderUpdatedResponse>>.value(
                _FakeDataState_1<_i62.HistoryOrderUpdatedResponse>(
          this,
          Invocation.method(
            #historyOrderUpdated,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i62.HistoryOrderUpdatedResponse>>);

  @override
  _i12.Future<_i3.DataState<_i48.StatusResponse>> locations(
          {required _i64.LocationsRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #locations,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i48.StatusResponse>>.value(
            _FakeDataState_1<_i48.StatusResponse>(
          this,
          Invocation.method(
            #locations,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i48.StatusResponse>>);

  @override
  _i12.Future<_i3.DataState<_i48.StatusResponse>> reason(
          {required _i65.ReasonMRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #reason,
          [],
          {#request: request},
        ),
        returnValue: _i12.Future<_i3.DataState<_i48.StatusResponse>>.value(
            _FakeDataState_1<_i48.StatusResponse>(
          this,
          Invocation.method(
            #reason,
            [],
            {#request: request},
          ),
        )),
      ) as _i12.Future<_i3.DataState<_i48.StatusResponse>>);
}

/// A class which mocks [ProcessingQueueBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockProcessingQueueBloc extends _i1.Mock
    implements _i8.ProcessingQueueBloc {
  MockProcessingQueueBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.DatabaseRepository get databaseRepository => (super.noSuchMethod(
        Invocation.getter(#databaseRepository),
        returnValue: _FakeDatabaseRepository_2(
          this,
          Invocation.getter(#databaseRepository),
        ),
      ) as _i4.DatabaseRepository);

  @override
  _i5.ApiRepository get apiRepository => (super.noSuchMethod(
        Invocation.getter(#apiRepository),
        returnValue: _FakeApiRepository_3(
          this,
          Invocation.getter(#apiRepository),
        ),
      ) as _i5.ApiRepository);

  @override
  _i6.LocalStorageService get storageService => (super.noSuchMethod(
        Invocation.getter(#storageService),
        returnValue: _FakeLocalStorageService_4(
          this,
          Invocation.getter(#storageService),
        ),
      ) as _i6.LocalStorageService);

  @override
  _i7.HelperFunctions get helperFunctions => (super.noSuchMethod(
        Invocation.getter(#helperFunctions),
        returnValue: _FakeHelperFunctions_5(
          this,
          Invocation.getter(#helperFunctions),
        ),
      ) as _i7.HelperFunctions);

  @override
  List<Map<String, String>> get itemsFilter => (super.noSuchMethod(
        Invocation.getter(#itemsFilter),
        returnValue: <Map<String, String>>[],
      ) as List<Map<String, String>>);

  @override
  List<Map<String, String>> get itemsState => (super.noSuchMethod(
        Invocation.getter(#itemsState),
        returnValue: <Map<String, String>>[],
      ) as List<Map<String, String>>);

  @override
  _i12.Stream<dynamic> get resolve => (super.noSuchMethod(
        Invocation.getter(#resolve),
        returnValue: _i12.Stream<dynamic>.empty(),
      ) as _i12.Stream<dynamic>);

  @override
  _i12.Stream<List<_i2.ProcessingQueue>> get todos => (super.noSuchMethod(
        Invocation.getter(#todos),
        returnValue: _i12.Stream<List<_i2.ProcessingQueue>>.empty(),
      ) as _i12.Stream<List<_i2.ProcessingQueue>>);

  @override
  _i8.ProcessingQueueState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeProcessingQueueState_6(
          this,
          Invocation.getter(#state),
        ),
      ) as _i8.ProcessingQueueState);

  @override
  _i12.Stream<_i8.ProcessingQueueState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i12.Stream<_i8.ProcessingQueueState>.empty(),
      ) as _i12.Stream<_i8.ProcessingQueueState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<int> countProcessingQueueIncompleteToTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #countProcessingQueueIncompleteToTransactions,
          [],
        ),
        returnValue: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);

  @override
  _i12.Stream<List<Map<String, dynamic>>>
      getProcessingQueueIncompleteToTransactions() => (super.noSuchMethod(
            Invocation.method(
              #getProcessingQueueIncompleteToTransactions,
              [],
            ),
            returnValue: _i12.Stream<List<Map<String, dynamic>>>.empty(),
          ) as _i12.Stream<List<Map<String, dynamic>>>);

  @override
  _i12.Future<List<_i2.ProcessingQueue>> getData(
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [
            page,
            limit,
          ],
        ),
        returnValue: _i12.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i12.Future<List<_i2.ProcessingQueue>>);

  @override
  void sendProcessingQueues(List<_i2.ProcessingQueue>? queues) =>
      super.noSuchMethod(
        Invocation.method(
          #sendProcessingQueues,
          [queues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendProcessingQueue(_i2.ProcessingQueue? queue) => super.noSuchMethod(
        Invocation.method(
          #sendProcessingQueue,
          [queue],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> validateIfServiceIsCompleted(_i2.ProcessingQueue? p) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateIfServiceIsCompleted,
          [p],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void add(_i8.ProcessingQueueEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i8.ProcessingQueueEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i8.ProcessingQueueState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i8.ProcessingQueueEvent>(
    _i66.EventHandler<E, _i8.ProcessingQueueState>? handler, {
    _i66.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i66.Transition<_i8.ProcessingQueueEvent, _i8.ProcessingQueueState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void onChange(_i66.Change<_i8.ProcessingQueueState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
      ) as String);

  @override
  String date(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #date,
          [date],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #date,
            [date],
          ),
        ),
      ) as String);
}

/// A class which mocks [GpsBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockGpsBloc extends _i1.Mock implements _i10.GpsBloc {
  MockGpsBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_7(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i9.NavigationService);

  @override
  _i6.LocalStorageService get storageService => (super.noSuchMethod(
        Invocation.getter(#storageService),
        returnValue: _FakeLocalStorageService_4(
          this,
          Invocation.getter(#storageService),
        ),
      ) as _i6.LocalStorageService);

  @override
  _i4.DatabaseRepository get databaseRepository => (super.noSuchMethod(
        Invocation.getter(#databaseRepository),
        returnValue: _FakeDatabaseRepository_2(
          this,
          Invocation.getter(#databaseRepository),
        ),
      ) as _i4.DatabaseRepository);

  @override
  set gpsServiceSubscription(
          _i12.StreamSubscription<dynamic>? _gpsServiceSubscription) =>
      super.noSuchMethod(
        Invocation.setter(
          #gpsServiceSubscription,
          _gpsServiceSubscription,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set positionStream(_i12.StreamSubscription<dynamic>? _positionStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #positionStream,
          _positionStream,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lastRecordedLocation(_i31.LatLng? _lastRecordedLocation) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastRecordedLocation,
          _lastRecordedLocation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get showingDialog => (super.noSuchMethod(
        Invocation.getter(#showingDialog),
        returnValue: false,
      ) as bool);

  @override
  set showingDialog(bool? _showingDialog) => super.noSuchMethod(
        Invocation.setter(
          #showingDialog,
          _showingDialog,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.GpsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeGpsState_8(
          this,
          Invocation.getter(#state),
        ),
      ) as _i10.GpsState);

  @override
  _i12.Stream<_i10.GpsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i12.Stream<_i10.GpsState>.empty(),
      ) as _i12.Stream<_i10.GpsState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<void> askGpsAccess() => (super.noSuchMethod(
        Invocation.method(
          #askGpsAccess,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> startFollowingUser(
    _i10.OnStartFollowingUser? event,
    dynamic emit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #startFollowingUser,
          [
            event,
            emit,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> stopFollowingUser(
    _i10.OnStopFollowingUser? event,
    dynamic emit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopFollowingUser,
          [
            event,
            emit,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  double calculateDistanceBetweenTwoLatLng(
    _i31.LatLng? currentPosition,
    _i31.LatLng? radiusPosition,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateDistanceBetweenTwoLatLng,
          [
            currentPosition,
            radiusPosition,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  int calculateDateBetweenTwoLatLng(
    DateTime? date1,
    DateTime? date2,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateDateBetweenTwoLatLng,
          [
            date1,
            date2,
          ],
        ),
        returnValue: 0,
      ) as int);

  @override
  bool calculateRadiusBetweenTwoLatLng(
    _i31.LatLng? currentPosition,
    _i31.LatLng? radiusPosition,
    double? radius,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateRadiusBetweenTwoLatLng,
          [
            currentPosition,
            radiusPosition,
            radius,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<void> saveLocation(
    String? type,
    _i67.Position? position,
    int? send,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLocation,
          [
            type,
            position,
            send,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void add(_i10.GpsEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i10.GpsEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i10.GpsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i10.GpsEvent>(
    _i66.EventHandler<E, _i10.GpsState>? handler, {
    _i66.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i66.Transition<_i10.GpsEvent, _i10.GpsState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i66.Change<_i10.GpsState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
      ) as String);

  @override
  String date(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #date,
          [date],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #date,
            [date],
          ),
        ),
      ) as String);
}

/// A class which mocks [NetworkBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkBloc extends _i1.Mock implements _i11.NetworkBloc {
  MockNetworkBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.NetworkState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeNetworkState_9(
          this,
          Invocation.getter(#state),
        ),
      ) as _i11.NetworkState);

  @override
  _i12.Stream<_i11.NetworkState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i12.Stream<_i11.NetworkState>.empty(),
      ) as _i12.Stream<_i11.NetworkState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void add(_i11.NetworkEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i11.NetworkEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i11.NetworkState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i11.NetworkEvent>(
    _i66.EventHandler<E, _i11.NetworkState>? handler, {
    _i66.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i66.Transition<_i11.NetworkEvent, _i11.NetworkState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void onChange(_i66.Change<_i11.NetworkState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
