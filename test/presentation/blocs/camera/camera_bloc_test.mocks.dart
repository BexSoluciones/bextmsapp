// Mocks generated by Mockito 5.4.4 from annotations
// in bexdeliveries/test/presentation/blocs/camera/camera_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i28;

import 'package:bexdeliveries/src/domain/models/account.dart' as _i17;
import 'package:bexdeliveries/src/domain/models/client.dart' as _i23;
import 'package:bexdeliveries/src/domain/models/error.dart' as _i22;
import 'package:bexdeliveries/src/domain/models/history_order.dart' as _i24;
import 'package:bexdeliveries/src/domain/models/location.dart' as _i18;
import 'package:bexdeliveries/src/domain/models/news.dart' as _i10;
import 'package:bexdeliveries/src/domain/models/note.dart' as _i21;
import 'package:bexdeliveries/src/domain/models/notification.dart' as _i26;
import 'package:bexdeliveries/src/domain/models/photo.dart' as _i20;
import 'package:bexdeliveries/src/domain/models/processing_queue.dart' as _i2;
import 'package:bexdeliveries/src/domain/models/reason.dart' as _i16;
import 'package:bexdeliveries/src/domain/models/summary.dart' as _i12;
import 'package:bexdeliveries/src/domain/models/summary_report.dart' as _i13;
import 'package:bexdeliveries/src/domain/models/transaction.dart' as _i14;
import 'package:bexdeliveries/src/domain/models/transaction_summary.dart'
    as _i15;
import 'package:bexdeliveries/src/domain/models/warehouse.dart' as _i11;
import 'package:bexdeliveries/src/domain/models/work.dart' as _i9;
import 'package:bexdeliveries/src/domain/repositories/database_repository.dart'
    as _i7;
import 'package:bexdeliveries/src/utils/resources/camera.dart' as _i30;
import 'package:camera/camera.dart' as _i4;
import 'package:camera_platform_interface/camera_platform_interface.dart'
    as _i3;
import 'package:flutter/foundation.dart' as _i6;
import 'package:flutter/material.dart' as _i5;
import 'package:flutter/services.dart' as _i29;
import 'package:latlong2/latlong.dart' as _i27;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;
import 'package:sqflite/sqflite.dart' as _i25;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProcessingQueue_0 extends _i1.SmartFake
    implements _i2.ProcessingQueue {
  _FakeProcessingQueue_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCameraDescription_1 extends _i1.SmartFake
    implements _i3.CameraDescription {
  _FakeCameraDescription_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCameraValue_2 extends _i1.SmartFake implements _i4.CameraValue {
  _FakeCameraValue_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeXFile_3 extends _i1.SmartFake implements _i3.XFile {
  _FakeXFile_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_4 extends _i1.SmartFake implements _i5.Widget {
  _FakeWidget_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeCameraController_5 extends _i1.SmartFake
    implements _i4.CameraController {
  _FakeCameraController_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseRepository extends _i1.Mock
    implements _i7.DatabaseRepository {
  MockDatabaseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i9.Work>> getAllWorks() => (super.noSuchMethod(
        Invocation.method(
          #getAllWorks,
          [],
        ),
        returnValue: _i8.Future<List<_i9.Work>>.value(<_i9.Work>[]),
      ) as _i8.Future<List<_i9.Work>>);

  @override
  _i8.Future<List<_i9.Work>> findAllWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #findAllWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i8.Future<List<_i9.Work>>.value(<_i9.Work>[]),
      ) as _i8.Future<List<_i9.Work>>);

  @override
  _i8.Future<List<_i9.Work>> findAllWorksPaginatedByWorkcode(
    String? workcode,
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findAllWorksPaginatedByWorkcode,
          [
            workcode,
            page,
            limit,
          ],
        ),
        returnValue: _i8.Future<List<_i9.Work>>.value(<_i9.Work>[]),
      ) as _i8.Future<List<_i9.Work>>);

  @override
  _i8.Future<List<String>?> completeWorks() => (super.noSuchMethod(
        Invocation.method(
          #completeWorks,
          [],
        ),
        returnValue: _i8.Future<List<String>?>.value(),
      ) as _i8.Future<List<String>?>);

  @override
  _i8.Future<int> countAllWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #countAllWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> insertWork(_i9.Work? work) => (super.noSuchMethod(
        Invocation.method(
          #insertWork,
          [work],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateWork(_i9.Work? work) => (super.noSuchMethod(
        Invocation.method(
          #updateWork,
          [work],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateStatusWork(
    String? workcode,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStatusWork,
          [
            workcode,
            status,
          ],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertWorks(List<_i9.Work>? works) => (super.noSuchMethod(
        Invocation.method(
          #insertWorks,
          [works],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyWorks() => (super.noSuchMethod(
        Invocation.method(
          #emptyWorks,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i9.WorkTypes?> getWorkTypesFromWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkTypesFromWorkcode,
          [workcode],
        ),
        returnValue: _i8.Future<_i9.WorkTypes?>.value(),
      ) as _i8.Future<_i9.WorkTypes?>);

  @override
  _i8.Future<List<_i9.WorkAdditional>> getClientsResJetDel(
    String? workcode,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClientsResJetDel,
          [
            workcode,
            reason,
          ],
        ),
        returnValue:
            _i8.Future<List<_i9.WorkAdditional>>.value(<_i9.WorkAdditional>[]),
      ) as _i8.Future<List<_i9.WorkAdditional>>);

  @override
  _i8.Future<void> insertNews(_i10.News? news) => (super.noSuchMethod(
        Invocation.method(
          #insertNews,
          [news],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i11.Warehouse>> getAllWarehouses() => (super.noSuchMethod(
        Invocation.method(
          #getAllWarehouses,
          [],
        ),
        returnValue: _i8.Future<List<_i11.Warehouse>>.value(<_i11.Warehouse>[]),
      ) as _i8.Future<List<_i11.Warehouse>>);

  @override
  _i8.Future<_i11.Warehouse?> findWarehouse(int? id) => (super.noSuchMethod(
        Invocation.method(
          #findWarehouse,
          [id],
        ),
        returnValue: _i8.Future<_i11.Warehouse?>.value(),
      ) as _i8.Future<_i11.Warehouse?>);

  @override
  _i8.Future<int> insertWarehouse(_i11.Warehouse? warehouse) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWarehouse,
          [warehouse],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateWarehouse(_i11.Warehouse? warehouse) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWarehouse,
          [warehouse],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertWarehouses(List<_i11.Warehouse>? warehouses) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWarehouses,
          [warehouses],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyWarehouses() => (super.noSuchMethod(
        Invocation.method(
          #emptyWarehouses,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i12.Summary>> getAllSummariesByOrderNumber(int? workId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByOrderNumber,
          [workId],
        ),
        returnValue: _i8.Future<List<_i12.Summary>>.value(<_i12.Summary>[]),
      ) as _i8.Future<List<_i12.Summary>>);

  @override
  _i8.Future<List<_i12.Summary>> getAllSummariesByWorkcode(
    int? workId,
    String? customer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByWorkcode,
          [
            workId,
            customer,
          ],
        ),
        returnValue: _i8.Future<List<_i12.Summary>>.value(<_i12.Summary>[]),
      ) as _i8.Future<List<_i12.Summary>>);

  @override
  _i8.Future<List<_i12.Summary>> getAllInventoryByOrderNumber(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllInventoryByOrderNumber,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i8.Future<List<_i12.Summary>>.value(<_i12.Summary>[]),
      ) as _i8.Future<List<_i12.Summary>>);

  @override
  _i8.Future<List<_i12.Summary>> getAllInventoryByPackage(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllInventoryByPackage,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i8.Future<List<_i12.Summary>>.value(<_i12.Summary>[]),
      ) as _i8.Future<List<_i12.Summary>>);

  @override
  _i8.Future<List<_i12.Summary>> getAllPackageByOrderNumber(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPackageByOrderNumber,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i8.Future<List<_i12.Summary>>.value(<_i12.Summary>[]),
      ) as _i8.Future<List<_i12.Summary>>);

  @override
  _i8.Future<List<_i12.Summary>> watchAllItemsPackage(
    String? orderNumber,
    String? packing,
    String? idPacking,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllItemsPackage,
          [
            orderNumber,
            packing,
            idPacking,
          ],
        ),
        returnValue: _i8.Future<List<_i12.Summary>>.value(<_i12.Summary>[]),
      ) as _i8.Future<List<_i12.Summary>>);

  @override
  _i8.Future<List<_i12.Summary>> getAllSummariesByOrderNumberMoved(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSummariesByOrderNumberMoved,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i8.Future<List<_i12.Summary>>.value(<_i12.Summary>[]),
      ) as _i8.Future<List<_i12.Summary>>);

  @override
  _i8.Future<List<_i13.SummaryReport>> getSummaryReportsWithReasonOrRedelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithReasonOrRedelivery,
          [orderNumber],
        ),
        returnValue:
            _i8.Future<List<_i13.SummaryReport>>.value(<_i13.SummaryReport>[]),
      ) as _i8.Future<List<_i13.SummaryReport>>);

  @override
  _i8.Future<List<_i13.SummaryReport>> getSummaryReportsWithReturnOrRedelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithReturnOrRedelivery,
          [orderNumber],
        ),
        returnValue:
            _i8.Future<List<_i13.SummaryReport>>.value(<_i13.SummaryReport>[]),
      ) as _i8.Future<List<_i13.SummaryReport>>);

  @override
  _i8.Future<List<_i13.SummaryReport>> getSummaryReportsWithDelivery(
          String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSummaryReportsWithDelivery,
          [orderNumber],
        ),
        returnValue:
            _i8.Future<List<_i13.SummaryReport>>.value(<_i13.SummaryReport>[]),
      ) as _i8.Future<List<_i13.SummaryReport>>);

  @override
  _i8.Future<double> countTotalRespawnWorksByWorkcode(
    String? workcode,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #countTotalRespawnWorksByWorkcode,
          [
            workcode,
            reason,
          ],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<bool> resetCantSummaries(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetCantSummaries,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<double> getTotalSummaries(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalSummaries,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<int> getTotalPackageSummaries(String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalPackageSummaries,
          [orderNumber],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> getTotalPackageSummariesLoose(String? orderNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalPackageSummariesLoose,
          [orderNumber],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> insertSummary(_i12.Summary? summary) => (super.noSuchMethod(
        Invocation.method(
          #insertSummary,
          [summary],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateSummary(_i12.Summary? summary) => (super.noSuchMethod(
        Invocation.method(
          #updateSummary,
          [summary],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertSummaries(List<_i12.Summary>? summaries) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertSummaries,
          [summaries],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptySummaries() => (super.noSuchMethod(
        Invocation.method(
          #emptySummaries,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteSummariesByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSummariesByWorkcode,
          [workcode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i14.Transaction>> getAllTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTransactions,
          [],
        ),
        returnValue:
            _i8.Future<List<_i14.Transaction>>.value(<_i14.Transaction>[]),
      ) as _i8.Future<List<_i14.Transaction>>);

  @override
  _i8.Future<String?> getDiffTime(int? workId) => (super.noSuchMethod(
        Invocation.method(
          #getDiffTime,
          [workId],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<double?> countTotalCollectionWorks() => (super.noSuchMethod(
        Invocation.method(
          #countTotalCollectionWorks,
          [],
        ),
        returnValue: _i8.Future<double?>.value(),
      ) as _i8.Future<double?>);

  @override
  _i8.Future<int> insertTransaction(_i14.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransaction,
          [transaction],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> insertTransactionSummary(
          _i15.TransactionSummary? transactionSummary) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransactionSummary,
          [transactionSummary],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<bool> validateTransaction(int? workId) => (super.noSuchMethod(
        Invocation.method(
          #validateTransaction,
          [workId],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> validateTransactionArrived(
    int? workId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateTransactionArrived,
          [
            workId,
            status,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> validateTransactionSummary(
    String? workcode,
    String? orderNumber,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateTransactionSummary,
          [
            workcode,
            orderNumber,
            status,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> checkLastTransaction(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkLastTransaction,
          [workcode],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> checkLastProduct(int? transactionId) => (super.noSuchMethod(
        Invocation.method(
          #checkLastProduct,
          [transactionId],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<int> updateTransaction(_i14.Transaction? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTransaction,
          [transaction],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertTransactions(List<_i14.Transaction>? transactions) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransactions,
          [transactions],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyTransactions() => (super.noSuchMethod(
        Invocation.method(
          #emptyTransactions,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteTransactionsByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTransactionsByWorkcode,
          [workcode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<int> countLeftClients(String? workcode) => (super.noSuchMethod(
        Invocation.method(
          #countLeftClients,
          [workcode],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<double> countTotalCollectionWorksByWorkcode(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #countTotalCollectionWorksByWorkcode,
          [workcode],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<bool> verifyTransactionExistence(
    int? workId,
    String? orderNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyTransactionExistence,
          [
            workId,
            orderNumber,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i16.Reason>> getAllReasons() => (super.noSuchMethod(
        Invocation.method(
          #getAllReasons,
          [],
        ),
        returnValue: _i8.Future<List<_i16.Reason>>.value(<_i16.Reason>[]),
      ) as _i8.Future<List<_i16.Reason>>);

  @override
  _i8.Future<_i16.Reason?> findReason(String? name) => (super.noSuchMethod(
        Invocation.method(
          #findReason,
          [name],
        ),
        returnValue: _i8.Future<_i16.Reason?>.value(),
      ) as _i8.Future<_i16.Reason?>);

  @override
  _i8.Future<int> insertReason(_i16.Reason? reason) => (super.noSuchMethod(
        Invocation.method(
          #insertReason,
          [reason],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateReason(_i16.Reason? reason) => (super.noSuchMethod(
        Invocation.method(
          #updateReason,
          [reason],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertReasons(List<_i16.Reason>? reasons) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertReasons,
          [reasons],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyReasons() => (super.noSuchMethod(
        Invocation.method(
          #emptyReasons,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i17.Account>> getAllAccounts() => (super.noSuchMethod(
        Invocation.method(
          #getAllAccounts,
          [],
        ),
        returnValue: _i8.Future<List<_i17.Account>>.value(<_i17.Account>[]),
      ) as _i8.Future<List<_i17.Account>>);

  @override
  _i8.Future<int> insertAccount(_i17.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #insertAccount,
          [account],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateAccount(_i17.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #updateAccount,
          [account],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertAccounts(List<_i17.Account>? accounts) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAccounts,
          [accounts],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyAccounts() => (super.noSuchMethod(
        Invocation.method(
          #emptyAccounts,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i2.ProcessingQueue>> getAllProcessingQueues(
    String? code,
    String? task,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueues,
          [
            code,
            task,
          ],
        ),
        returnValue: _i8.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i8.Future<List<_i2.ProcessingQueue>>);

  @override
  _i8.Future<List<_i2.ProcessingQueue>> getAllProcessingQueuesPaginated(
    int? page,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueuesPaginated,
          [
            page,
            limit,
          ],
        ),
        returnValue: _i8.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i8.Future<List<_i2.ProcessingQueue>>);

  @override
  _i8.Future<_i2.ProcessingQueue> findProcessingQueue(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #findProcessingQueue,
          [id],
        ),
        returnValue:
            _i8.Future<_i2.ProcessingQueue>.value(_FakeProcessingQueue_0(
          this,
          Invocation.method(
            #findProcessingQueue,
            [id],
          ),
        )),
      ) as _i8.Future<_i2.ProcessingQueue>);

  @override
  _i8.Stream<List<_i2.ProcessingQueue>> watchAllProcessingQueues() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchAllProcessingQueues,
          [],
        ),
        returnValue: _i8.Stream<List<_i2.ProcessingQueue>>.empty(),
      ) as _i8.Stream<List<_i2.ProcessingQueue>>);

  @override
  _i8.Future<List<_i2.ProcessingQueue>> getAllProcessingQueuesIncomplete() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProcessingQueuesIncomplete,
          [],
        ),
        returnValue: _i8.Future<List<_i2.ProcessingQueue>>.value(
            <_i2.ProcessingQueue>[]),
      ) as _i8.Future<List<_i2.ProcessingQueue>>);

  @override
  _i8.Future<int> countProcessingQueueIncompleteToTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #countProcessingQueueIncompleteToTransactions,
          [],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Stream<List<Map<String, dynamic>>>
      getProcessingQueueIncompleteToTransactions() => (super.noSuchMethod(
            Invocation.method(
              #getProcessingQueueIncompleteToTransactions,
              [],
            ),
            returnValue: _i8.Stream<List<Map<String, dynamic>>>.empty(),
          ) as _i8.Stream<List<Map<String, dynamic>>>);

  @override
  _i8.Future<bool> validateIfProcessingQueueIsIncomplete() =>
      (super.noSuchMethod(
        Invocation.method(
          #validateIfProcessingQueueIsIncomplete,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<int> updateProcessingQueue(_i2.ProcessingQueue? processingQueue) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProcessingQueue,
          [processingQueue],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> insertProcessingQueue(_i2.ProcessingQueue? processingQueue) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertProcessingQueue,
          [processingQueue],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> emptyProcessingQueues() => (super.noSuchMethod(
        Invocation.method(
          #emptyProcessingQueues,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Stream<List<_i18.Location>> watchAllLocations() => (super.noSuchMethod(
        Invocation.method(
          #watchAllLocations,
          [],
        ),
        returnValue: _i8.Stream<List<_i18.Location>>.empty(),
      ) as _i8.Stream<List<_i18.Location>>);

  @override
  _i8.Future<List<_i18.Location>> getAllLocations() => (super.noSuchMethod(
        Invocation.method(
          #getAllLocations,
          [],
        ),
        returnValue: _i8.Future<List<_i18.Location>>.value(<_i18.Location>[]),
      ) as _i8.Future<List<_i18.Location>>);

  @override
  _i8.Future<_i18.Location?> getLastLocation() => (super.noSuchMethod(
        Invocation.method(
          #getLastLocation,
          [],
        ),
        returnValue: _i8.Future<_i18.Location?>.value(),
      ) as _i8.Future<_i18.Location?>);

  @override
  _i8.Future<bool> countLocationsManager() => (super.noSuchMethod(
        Invocation.method(
          #countLocationsManager,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<String> getLocationsToSend() => (super.noSuchMethod(
        Invocation.method(
          #getLocationsToSend,
          [],
        ),
        returnValue: _i8.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #getLocationsToSend,
            [],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<int?> updateLocationsManager() => (super.noSuchMethod(
        Invocation.method(
          #updateLocationsManager,
          [],
        ),
        returnValue: _i8.Future<int?>.value(),
      ) as _i8.Future<int?>);

  @override
  _i8.Future<int> updateLocation(_i18.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocation,
          [location],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertLocation(_i18.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertLocation,
          [location],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyLocations() => (super.noSuchMethod(
        Invocation.method(
          #emptyLocations,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i20.Photo>> getAllPhotos() => (super.noSuchMethod(
        Invocation.method(
          #getAllPhotos,
          [],
        ),
        returnValue: _i8.Future<List<_i20.Photo>>.value(<_i20.Photo>[]),
      ) as _i8.Future<List<_i20.Photo>>);

  @override
  _i8.Future<_i20.Photo?> findPhoto(String? path) => (super.noSuchMethod(
        Invocation.method(
          #findPhoto,
          [path],
        ),
        returnValue: _i8.Future<_i20.Photo?>.value(),
      ) as _i8.Future<_i20.Photo?>);

  @override
  _i8.Future<int> insertPhoto(_i20.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #insertPhoto,
          [photo],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updatePhoto(_i20.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #updatePhoto,
          [photo],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> deletePhoto(_i20.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #deletePhoto,
          [photo],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> deleteAll(int? photoId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [photoId],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertPhotos(List<_i20.Photo>? photos) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertPhotos,
          [photos],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyPhotos() => (super.noSuchMethod(
        Invocation.method(
          #emptyPhotos,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i21.Note>> getAllNotes() => (super.noSuchMethod(
        Invocation.method(
          #getAllNotes,
          [],
        ),
        returnValue: _i8.Future<List<_i21.Note>>.value(<_i21.Note>[]),
      ) as _i8.Future<List<_i21.Note>>);

  @override
  _i8.Future<_i21.Note?> findNote(String? zoneId) => (super.noSuchMethod(
        Invocation.method(
          #findNote,
          [zoneId],
        ),
        returnValue: _i8.Future<_i21.Note?>.value(),
      ) as _i8.Future<_i21.Note?>);

  @override
  _i8.Future<int> insertNote(_i21.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #insertNote,
          [note],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateNote(_i21.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #updateNote,
          [note],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> deleteNote(_i21.Note? note) => (super.noSuchMethod(
        Invocation.method(
          #deleteNote,
          [note],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertNotes(List<_i21.Note>? notes) => (super.noSuchMethod(
        Invocation.method(
          #insertNotes,
          [notes],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyNotes() => (super.noSuchMethod(
        Invocation.method(
          #emptyNotes,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i22.Error>> getAllErrors() => (super.noSuchMethod(
        Invocation.method(
          #getAllErrors,
          [],
        ),
        returnValue: _i8.Future<List<_i22.Error>>.value(<_i22.Error>[]),
      ) as _i8.Future<List<_i22.Error>>);

  @override
  _i8.Future<int> insertError(_i22.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #insertError,
          [error],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateError(_i22.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #updateError,
          [error],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> deleteError(_i22.Error? error) => (super.noSuchMethod(
        Invocation.method(
          #deleteError,
          [error],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> insertErrors(List<_i22.Error>? errors) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertErrors,
          [errors],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> emptyErrors() => (super.noSuchMethod(
        Invocation.method(
          #emptyErrors,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Stream<List<_i23.Client>> watchAllClients() => (super.noSuchMethod(
        Invocation.method(
          #watchAllClients,
          [],
        ),
        returnValue: _i8.Stream<List<_i23.Client>>.empty(),
      ) as _i8.Stream<List<_i23.Client>>);

  @override
  _i8.Future<List<_i23.Client>> getAllClients() => (super.noSuchMethod(
        Invocation.method(
          #getAllClients,
          [],
        ),
        returnValue: _i8.Future<List<_i23.Client>>.value(<_i23.Client>[]),
      ) as _i8.Future<List<_i23.Client>>);

  @override
  _i8.Future<bool> validateClient(int? id) => (super.noSuchMethod(
        Invocation.method(
          #validateClient,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<int> insertClient(_i23.Client? client) => (super.noSuchMethod(
        Invocation.method(
          #insertClient,
          [client],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> updateClient(_i23.Client? client) => (super.noSuchMethod(
        Invocation.method(
          #updateClient,
          [client],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> emptyClients() => (super.noSuchMethod(
        Invocation.method(
          #emptyClients,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<int> insertHistory(_i24.HistoryOrder? historyOrder) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertHistory,
          [historyOrder],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<_i24.HistoryOrder?> getHistoryOrder(
    String? workcode,
    int? zoneId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoryOrder,
          [
            workcode,
            zoneId,
          ],
        ),
        returnValue: _i8.Future<_i24.HistoryOrder?>.value(),
      ) as _i8.Future<_i24.HistoryOrder?>);

  @override
  _i8.Future<bool> listenForTableChanges(
    String? table,
    String? column,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenForTableChanges,
          [
            table,
            column,
            value,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i25.Database?> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i8.Future<_i25.Database?>.value(),
      ) as _i8.Future<_i25.Database?>);

  @override
  _i8.Future<int> insertNotification(_i26.PushNotification? notification) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertNotification,
          [notification],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<List<_i26.PushNotification>> getNotifications() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [],
        ),
        returnValue: _i8.Future<List<_i26.PushNotification>>.value(
            <_i26.PushNotification>[]),
      ) as _i8.Future<List<_i26.PushNotification>>);

  @override
  _i8.Future<void> updateNotification(
    int? notificationId,
    String? readAt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotification,
          [
            notificationId,
            readAt,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<int?> countAllUnreadNotifications() => (super.noSuchMethod(
        Invocation.method(
          #countAllUnreadNotifications,
          [],
        ),
        returnValue: _i8.Future<int?>.value(),
      ) as _i8.Future<int?>);

  @override
  _i8.Future<int> insertPolylines(
    String? workcode,
    List<_i27.LatLng>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertPolylines,
          [
            workcode,
            data,
          ],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<List<_i27.LatLng>> getPolylines(String? workcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPolylines,
          [workcode],
        ),
        returnValue: _i8.Future<List<_i27.LatLng>>.value(<_i27.LatLng>[]),
      ) as _i8.Future<List<_i27.LatLng>>);

  @override
  _i8.Future<void> deleteProcessingQueueByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteProcessingQueueByDays,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteLocationsByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteLocationsByDays,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteNotificationsByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteNotificationsByDays,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteTransactionByDays() => (super.noSuchMethod(
        Invocation.method(
          #deleteTransactionByDays,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [CameraController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCameraController extends _i1.Mock implements _i4.CameraController {
  MockCameraController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ResolutionPreset get resolutionPreset => (super.noSuchMethod(
        Invocation.getter(#resolutionPreset),
        returnValue: _i3.ResolutionPreset.low,
      ) as _i3.ResolutionPreset);

  @override
  bool get enableAudio => (super.noSuchMethod(
        Invocation.getter(#enableAudio),
        returnValue: false,
      ) as bool);

  @override
  _i3.CameraDescription get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: _FakeCameraDescription_1(
          this,
          Invocation.getter(#description),
        ),
      ) as _i3.CameraDescription);

  @override
  int get cameraId => (super.noSuchMethod(
        Invocation.getter(#cameraId),
        returnValue: 0,
      ) as int);

  @override
  _i4.CameraValue get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: _FakeCameraValue_2(
          this,
          Invocation.getter(#value),
        ),
      ) as _i4.CameraValue);

  @override
  set value(_i4.CameraValue? newValue) => super.noSuchMethod(
        Invocation.setter(
          #value,
          newValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void debugCheckIsDisposed() => super.noSuchMethod(
        Invocation.method(
          #debugCheckIsDisposed,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> prepareForVideoRecording() => (super.noSuchMethod(
        Invocation.method(
          #prepareForVideoRecording,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> pausePreview() => (super.noSuchMethod(
        Invocation.method(
          #pausePreview,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> resumePreview() => (super.noSuchMethod(
        Invocation.method(
          #resumePreview,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setDescription(_i3.CameraDescription? description) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDescription,
          [description],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.XFile> takePicture() => (super.noSuchMethod(
        Invocation.method(
          #takePicture,
          [],
        ),
        returnValue: _i8.Future<_i3.XFile>.value(_FakeXFile_3(
          this,
          Invocation.method(
            #takePicture,
            [],
          ),
        )),
      ) as _i8.Future<_i3.XFile>);

  @override
  _i8.Future<void> startImageStream(_i4.onLatestImageAvailable? onAvailable) =>
      (super.noSuchMethod(
        Invocation.method(
          #startImageStream,
          [onAvailable],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> stopImageStream() => (super.noSuchMethod(
        Invocation.method(
          #stopImageStream,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> startVideoRecording(
          {_i4.onLatestImageAvailable? onAvailable}) =>
      (super.noSuchMethod(
        Invocation.method(
          #startVideoRecording,
          [],
          {#onAvailable: onAvailable},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.XFile> stopVideoRecording() => (super.noSuchMethod(
        Invocation.method(
          #stopVideoRecording,
          [],
        ),
        returnValue: _i8.Future<_i3.XFile>.value(_FakeXFile_3(
          this,
          Invocation.method(
            #stopVideoRecording,
            [],
          ),
        )),
      ) as _i8.Future<_i3.XFile>);

  @override
  _i8.Future<void> pauseVideoRecording() => (super.noSuchMethod(
        Invocation.method(
          #pauseVideoRecording,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> resumeVideoRecording() => (super.noSuchMethod(
        Invocation.method(
          #resumeVideoRecording,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i5.Widget buildPreview() => (super.noSuchMethod(
        Invocation.method(
          #buildPreview,
          [],
        ),
        returnValue: _FakeWidget_4(
          this,
          Invocation.method(
            #buildPreview,
            [],
          ),
        ),
      ) as _i5.Widget);

  @override
  _i8.Future<double> getMaxZoomLevel() => (super.noSuchMethod(
        Invocation.method(
          #getMaxZoomLevel,
          [],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<double> getMinZoomLevel() => (super.noSuchMethod(
        Invocation.method(
          #getMinZoomLevel,
          [],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<void> setZoomLevel(double? zoom) => (super.noSuchMethod(
        Invocation.method(
          #setZoomLevel,
          [zoom],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setFlashMode(_i3.FlashMode? mode) => (super.noSuchMethod(
        Invocation.method(
          #setFlashMode,
          [mode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setExposureMode(_i3.ExposureMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExposureMode,
          [mode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setExposurePoint(_i28.Offset? point) => (super.noSuchMethod(
        Invocation.method(
          #setExposurePoint,
          [point],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<double> getMinExposureOffset() => (super.noSuchMethod(
        Invocation.method(
          #getMinExposureOffset,
          [],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<double> getMaxExposureOffset() => (super.noSuchMethod(
        Invocation.method(
          #getMaxExposureOffset,
          [],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<double> getExposureOffsetStepSize() => (super.noSuchMethod(
        Invocation.method(
          #getExposureOffsetStepSize,
          [],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<double> setExposureOffset(double? offset) => (super.noSuchMethod(
        Invocation.method(
          #setExposureOffset,
          [offset],
        ),
        returnValue: _i8.Future<double>.value(0.0),
      ) as _i8.Future<double>);

  @override
  _i8.Future<void> lockCaptureOrientation(
          [_i29.DeviceOrientation? orientation]) =>
      (super.noSuchMethod(
        Invocation.method(
          #lockCaptureOrientation,
          [orientation],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setFocusMode(_i3.FocusMode? mode) => (super.noSuchMethod(
        Invocation.method(
          #setFocusMode,
          [mode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> unlockCaptureOrientation() => (super.noSuchMethod(
        Invocation.method(
          #unlockCaptureOrientation,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setFocusPoint(_i28.Offset? point) => (super.noSuchMethod(
        Invocation.method(
          #setFocusPoint,
          [point],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void removeListener(_i28.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i28.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CameraUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockCameraUtils extends _i1.Mock implements _i30.CameraUtils {
  MockCameraUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i4.CameraController> getCameraController(
    _i3.ResolutionPreset? resolutionPreset,
    _i3.CameraLensDirection? cameraLensDirection,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCameraController,
          [
            resolutionPreset,
            cameraLensDirection,
          ],
        ),
        returnValue:
            _i8.Future<_i4.CameraController>.value(_FakeCameraController_5(
          this,
          Invocation.method(
            #getCameraController,
            [
              resolutionPreset,
              cameraLensDirection,
            ],
          ),
        )),
      ) as _i8.Future<_i4.CameraController>);

  @override
  _i8.Future<String> getPath() => (super.noSuchMethod(
        Invocation.method(
          #getPath,
          [],
        ),
        returnValue: _i8.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #getPath,
            [],
          ),
        )),
      ) as _i8.Future<String>);
}

/// A class which mocks [CameraValue].
///
/// See the documentation for Mockito's code generation for more information.
class MockCameraValue extends _i1.Mock implements _i4.CameraValue {
  MockCameraValue() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isTakingPicture => (super.noSuchMethod(
        Invocation.getter(#isTakingPicture),
        returnValue: false,
      ) as bool);

  @override
  bool get isRecordingVideo => (super.noSuchMethod(
        Invocation.getter(#isRecordingVideo),
        returnValue: false,
      ) as bool);

  @override
  bool get isStreamingImages => (super.noSuchMethod(
        Invocation.getter(#isStreamingImages),
        returnValue: false,
      ) as bool);

  @override
  bool get isPreviewPaused => (super.noSuchMethod(
        Invocation.getter(#isPreviewPaused),
        returnValue: false,
      ) as bool);

  @override
  _i3.FlashMode get flashMode => (super.noSuchMethod(
        Invocation.getter(#flashMode),
        returnValue: _i3.FlashMode.off,
      ) as _i3.FlashMode);

  @override
  _i3.ExposureMode get exposureMode => (super.noSuchMethod(
        Invocation.getter(#exposureMode),
        returnValue: _i3.ExposureMode.auto,
      ) as _i3.ExposureMode);

  @override
  _i3.FocusMode get focusMode => (super.noSuchMethod(
        Invocation.getter(#focusMode),
        returnValue: _i3.FocusMode.auto,
      ) as _i3.FocusMode);

  @override
  bool get exposurePointSupported => (super.noSuchMethod(
        Invocation.getter(#exposurePointSupported),
        returnValue: false,
      ) as bool);

  @override
  bool get focusPointSupported => (super.noSuchMethod(
        Invocation.getter(#focusPointSupported),
        returnValue: false,
      ) as bool);

  @override
  _i29.DeviceOrientation get deviceOrientation => (super.noSuchMethod(
        Invocation.getter(#deviceOrientation),
        returnValue: _i29.DeviceOrientation.portraitUp,
      ) as _i29.DeviceOrientation);

  @override
  _i3.CameraDescription get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: _FakeCameraDescription_1(
          this,
          Invocation.getter(#description),
        ),
      ) as _i3.CameraDescription);

  @override
  bool get isRecordingPaused => (super.noSuchMethod(
        Invocation.getter(#isRecordingPaused),
        returnValue: false,
      ) as bool);

  @override
  double get aspectRatio => (super.noSuchMethod(
        Invocation.getter(#aspectRatio),
        returnValue: 0.0,
      ) as double);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get isCaptureOrientationLocked => (super.noSuchMethod(
        Invocation.getter(#isCaptureOrientationLocked),
        returnValue: false,
      ) as bool);

  @override
  _i4.CameraValue copyWith({
    bool? isInitialized,
    bool? isRecordingVideo,
    bool? isTakingPicture,
    bool? isStreamingImages,
    String? errorDescription,
    _i28.Size? previewSize,
    bool? isRecordingPaused,
    _i3.FlashMode? flashMode,
    _i3.ExposureMode? exposureMode,
    _i3.FocusMode? focusMode,
    bool? exposurePointSupported,
    bool? focusPointSupported,
    _i29.DeviceOrientation? deviceOrientation,
    _i4.Optional<_i29.DeviceOrientation>? lockedCaptureOrientation,
    _i4.Optional<_i29.DeviceOrientation>? recordingOrientation,
    bool? isPreviewPaused,
    _i3.CameraDescription? description,
    _i4.Optional<_i29.DeviceOrientation>? previewPauseOrientation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #isInitialized: isInitialized,
            #isRecordingVideo: isRecordingVideo,
            #isTakingPicture: isTakingPicture,
            #isStreamingImages: isStreamingImages,
            #errorDescription: errorDescription,
            #previewSize: previewSize,
            #isRecordingPaused: isRecordingPaused,
            #flashMode: flashMode,
            #exposureMode: exposureMode,
            #focusMode: focusMode,
            #exposurePointSupported: exposurePointSupported,
            #focusPointSupported: focusPointSupported,
            #deviceOrientation: deviceOrientation,
            #lockedCaptureOrientation: lockedCaptureOrientation,
            #recordingOrientation: recordingOrientation,
            #isPreviewPaused: isPreviewPaused,
            #description: description,
            #previewPauseOrientation: previewPauseOrientation,
          },
        ),
        returnValue: _FakeCameraValue_2(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #isInitialized: isInitialized,
              #isRecordingVideo: isRecordingVideo,
              #isTakingPicture: isTakingPicture,
              #isStreamingImages: isStreamingImages,
              #errorDescription: errorDescription,
              #previewSize: previewSize,
              #isRecordingPaused: isRecordingPaused,
              #flashMode: flashMode,
              #exposureMode: exposureMode,
              #focusMode: focusMode,
              #exposurePointSupported: exposurePointSupported,
              #focusPointSupported: focusPointSupported,
              #deviceOrientation: deviceOrientation,
              #lockedCaptureOrientation: lockedCaptureOrientation,
              #recordingOrientation: recordingOrientation,
              #isPreviewPaused: isPreviewPaused,
              #description: description,
              #previewPauseOrientation: previewPauseOrientation,
            },
          ),
        ),
      ) as _i4.CameraValue);
}
