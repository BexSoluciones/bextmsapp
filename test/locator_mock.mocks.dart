// Mocks generated by Mockito 5.4.4 from annotations
// in bexdeliveries/test/locator_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bexdeliveries/core/helpers/index.dart' as _i3;
import 'package:bexdeliveries/src/domain/models/isolate.dart' as _i8;
import 'package:bexdeliveries/src/domain/models/processing_queue.dart' as _i11;
import 'package:bexdeliveries/src/domain/repositories/api_repository.dart'
    as _i10;
import 'package:bexdeliveries/src/domain/repositories/database_repository.dart'
    as _i9;
import 'package:bexdeliveries/src/services/navigation.dart' as _i6;
import 'package:bexdeliveries/src/services/storage.dart' as _i4;
import 'package:bexdeliveries/src/services/workmanager.dart' as _i7;
import 'package:flutter/material.dart' as _i1;
import 'package:mockito/mockito.dart' as _i2;
import 'package:mockito/src/dummies.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHelperFunctions_1 extends _i2.SmartFake
    implements _i3.HelperFunctions {
  _FakeHelperFunctions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i2.Mock
    implements _i4.LocalStorageService {
  MockLocalStorageService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  void setString(
    dynamic key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setObject(
    dynamic key,
    dynamic object,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setObject,
          [
            key,
            object,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInt(
    dynamic key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDouble(
    dynamic key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBool(
    dynamic key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void remove(dynamic key) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i2.Mock implements _i6.NavigationService {
  MockNavigationService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i1.GlobalKey<_i1.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_0<_i1.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i1.GlobalKey<_i1.NavigatorState>);

  @override
  _i5.Future<dynamic> goTo(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #goTo,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> replaceTo(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceTo,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  void goBack() => super.noSuchMethod(
        Invocation.method(
          #goBack,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WorkmanagerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkmanagerService extends _i2.Mock
    implements _i7.WorkmanagerService {
  MockWorkmanagerService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i3.HelperFunctions get helperFunction => (super.noSuchMethod(
        Invocation.getter(#helperFunction),
        returnValue: _FakeHelperFunctions_1(
          this,
          Invocation.getter(#helperFunction),
        ),
      ) as _i3.HelperFunctions);

  @override
  _i5.Future<void> heavyTask(_i8.IsolateModel? model) => (super.noSuchMethod(
        Invocation.method(
          #heavyTask,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  dynamic initialize(Function? callbackDispatcher) =>
      super.noSuchMethod(Invocation.method(
        #initialize,
        [callbackDispatcher],
      ));

  @override
  _i5.Future<bool> checkConnection() => (super.noSuchMethod(
        Invocation.method(
          #checkConnection,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  void display(
    String? title,
    String? body,
    _i3.HelperFunctions? helperFunctions,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #display,
          [
            title,
            body,
            helperFunctions,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic executeTask(
    _i4.LocalStorageService? storageService,
    _i9.DatabaseRepository? databaseRepository,
    _i10.ApiRepository? apiRepository,
  ) =>
      super.noSuchMethod(Invocation.method(
        #executeTask,
        [
          storageService,
          databaseRepository,
          apiRepository,
        ],
      ));

  @override
  dynamic registerPeriodicTask(
    String? id,
    String? name,
    Duration? frequency,
  ) =>
      super.noSuchMethod(Invocation.method(
        #registerPeriodicTask,
        [
          id,
          name,
          frequency,
        ],
      ));

  @override
  dynamic registerOneOffTask(
    String? id,
    String? name,
    Map<String, dynamic>? data,
  ) =>
      super.noSuchMethod(Invocation.method(
        #registerOneOffTask,
        [
          id,
          name,
          data,
        ],
      ));

  @override
  _i5.Future<bool> completeWorks(
    _i9.DatabaseRepository? databaseRepository,
    _i10.ApiRepository? apiRepository,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeWorks,
          [
            databaseRepository,
            apiRepository,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> sendProcessing(
    _i4.LocalStorageService? storageService,
    _i9.DatabaseRepository? databaseRepository,
    _i10.ApiRepository? apiRepository,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendProcessing,
          [
            storageService,
            databaseRepository,
            apiRepository,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> sendProcessingQueue(
    _i11.ProcessingQueue? queue,
    _i4.LocalStorageService? storageService,
    _i9.DatabaseRepository? databaseRepository,
    _i10.ApiRepository? apiRepository,
    _i3.HelperFunctions? helperFunction,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendProcessingQueue,
          [
            queue,
            storageService,
            databaseRepository,
            apiRepository,
            helperFunction,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  String now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
      ) as String);

  @override
  String date(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #date,
          [date],
        ),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.method(
            #date,
            [date],
          ),
        ),
      ) as String);
}
